{"version":3,"file":"hotkeys.directive.js","sources":["hotkeys.directive.js"],"names":[],"mappings":"AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;oBAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,+BAKG;AACH;AACA;AACA","sourcesContent":["\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar hotkey_model_1 = require(\"./hotkey.model\");\r\nvar hotkeys_service_1 = require(\"./hotkeys.service\");\r\nrequire(\"mousetrap\");\r\nvar HotkeysDirective = (function () {\r\n    function HotkeysDirective(_hotkeysService, _elementRef) {\r\n        this._hotkeysService = _hotkeysService;\r\n        this._elementRef = _elementRef;\r\n        this.hotkeysList = [];\r\n        this.oldHotkeys = [];\r\n        this.mousetrap = new Mousetrap(this._elementRef.nativeElement); // Bind hotkeys to the current element (and any children)\r\n    }\r\n    HotkeysDirective.prototype.ngOnInit = function () {\r\n        for (var _i = 0, _a = this.hotkeys; _i < _a.length; _i++) {\r\n            var hotkey = _a[_i];\r\n            var combo = Object.keys(hotkey)[0];\r\n            var hotkeyObj = new hotkey_model_1.Hotkey(combo, hotkey[combo]);\r\n            var oldHotkey = this._hotkeysService.get(combo);\r\n            if (oldHotkey !== null) {\r\n                this.oldHotkeys.push(oldHotkey);\r\n                this._hotkeysService.remove(oldHotkey);\r\n            }\r\n            this.hotkeysList.push(hotkeyObj);\r\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\r\n        }\r\n    };\r\n    HotkeysDirective.prototype.ngOnDestroy = function () {\r\n        for (var _i = 0, _a = this.hotkeysList; _i < _a.length; _i++) {\r\n            var hotkey = _a[_i];\r\n            this.mousetrap.unbind(hotkey.combo);\r\n        }\r\n        this._hotkeysService.add(this.oldHotkeys);\r\n    };\r\n    return HotkeysDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input(),\r\n    __metadata(\"design:type\", Array)\r\n], HotkeysDirective.prototype, \"hotkeys\", void 0);\r\nHotkeysDirective = __decorate([\r\n    core_1.Directive({\r\n        selector: '[hotkeys]',\r\n        providers: [hotkeys_service_1.HotkeysService]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [hotkeys_service_1.HotkeysService, core_1.ElementRef])\r\n], HotkeysDirective);\r\nexports.HotkeysDirective = HotkeysDirective;\r\n"]}