{"version":3,"file":"hotkeys.service.js","sources":["hotkeys.service.js"],"names":[],"mappingskCAAM;AACN;AACA;AACA,6BAEG;AACH;AACA;AACA;AACA","sourcesContent":["\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar hotkey_options_1 = require(\"./hotkey.options\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar hotkey_model_1 = require(\"./hotkey.model\");\r\nrequire(\"mousetrap\");\r\nvar HotkeysService = (function () {\r\n    function HotkeysService(options) {\r\n        this.options = options;\r\n        this.hotkeys = [];\r\n        this.pausedHotkeys = [];\r\n        this.cheatSheetToggle = new rxjs_1.Subject();\r\n        this._preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n        Mousetrap.prototype.stopCallback = function (event, element, combo, callback) {\r\n            // if the element has the class \"mousetrap\" then no need to stop\r\n            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\r\n                return false;\r\n            }\r\n            return (element.contentEditable && element.contentEditable === 'true');\r\n        };\r\n        this.mousetrap = new Mousetrap();\r\n        if (!this.options.disableCheatSheet) {\r\n            this.add(new hotkey_model_1.Hotkey(this.options.cheatSheetHotkey || '?', function (event) {\r\n                this.cheatSheetToggle.next();\r\n            }.bind(this), [], this.options.cheatSheetDescription || 'Show / hide this help menu'));\r\n        }\r\n        if (this.options.cheatSheetCloseEsc) {\r\n            this.add(new hotkey_model_1.Hotkey('esc', function (event) {\r\n                this.cheatSheetToggle.next(false);\r\n            }.bind(this), ['HOTKEYS-CHEATSHEET'], this.options.cheatSheetCloseEscDescription || 'Hide this help menu'));\r\n        }\r\n    }\r\n    HotkeysService.prototype.add = function (hotkey, specificEvent) {\r\n        var _this = this;\r\n        if (Array.isArray(hotkey)) {\r\n            var temp = [];\r\n            for (var _i = 0, hotkey_1 = hotkey; _i < hotkey_1.length; _i++) {\r\n                var key = hotkey_1[_i];\r\n                temp.push(this.add(key, specificEvent));\r\n            }\r\n            return temp;\r\n        }\r\n        this.remove(hotkey);\r\n        this.hotkeys.push(hotkey);\r\n        this.mousetrap.bind(hotkey.combo, function (event, combo) {\r\n            var shouldExecute = true;\r\n            // if the callback is executed directly `hotkey.get('w').callback()`\r\n            // there will be no event, so just execute the callback.\r\n            if (event) {\r\n                var target = (event.target || event.srcElement); // srcElement is IE only\r\n                var nodeName = target.nodeName.toUpperCase();\r\n                // check if the input has a mousetrap class, and skip checking preventIn if so\r\n                if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\r\n                    shouldExecute = true;\r\n                }\r\n                else if (_this._preventIn.indexOf(nodeName) > -1 && hotkey.allowIn.map(function (allow) { return allow.toUpperCase(); }).indexOf(nodeName) === -1) {\r\n                    // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\r\n                    shouldExecute = false;\r\n                }\r\n            }\r\n            if (shouldExecute) {\r\n                return hotkey.callback.apply(_this, [event, combo]);\r\n            }\r\n        }, specificEvent);\r\n        return hotkey;\r\n    };\r\n    HotkeysService.prototype.remove = function (hotkey) {\r\n        var temp = [];\r\n        if (!hotkey) {\r\n            for (var _i = 0, _a = this.hotkeys; _i < _a.length; _i++) {\r\n                var key = _a[_i];\r\n                temp.push(this.remove(key));\r\n            }\r\n            return temp;\r\n        }\r\n        if (Array.isArray(hotkey)) {\r\n            for (var _b = 0, hotkey_2 = hotkey; _b < hotkey_2.length; _b++) {\r\n                var key = hotkey_2[_b];\r\n                temp.push(this.remove(key));\r\n            }\r\n            return temp;\r\n        }\r\n        var index = this.findHotkey(hotkey);\r\n        if (index > -1) {\r\n            this.hotkeys.splice(index, 1);\r\n            this.mousetrap.unbind(hotkey.combo);\r\n            return hotkey;\r\n        }\r\n        return null;\r\n    };\r\n    HotkeysService.prototype.get = function (combo) {\r\n        if (!combo) {\r\n            return this.hotkeys;\r\n        }\r\n        if (Array.isArray(combo)) {\r\n            var temp = [];\r\n            for (var _i = 0, combo_1 = combo; _i < combo_1.length; _i++) {\r\n                var key = combo_1[_i];\r\n                temp.push(this.get(key));\r\n            }\r\n            return temp;\r\n        }\r\n        for (var i = 0; i < this.hotkeys.length; i++) {\r\n            if (this.hotkeys[i].combo.indexOf(combo) > -1) {\r\n                return this.hotkeys[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    HotkeysService.prototype.pause = function (hotkey) {\r\n        if (!hotkey) {\r\n            return this.pause(this.hotkeys);\r\n        }\r\n        if (Array.isArray(hotkey)) {\r\n            var temp = [];\r\n            for (var _i = 0, hotkey_3 = hotkey; _i < hotkey_3.length; _i++) {\r\n                var key = hotkey_3[_i];\r\n                temp.push(this.pause(key));\r\n            }\r\n            return temp;\r\n        }\r\n        this.remove(hotkey);\r\n        this.pausedHotkeys.push(hotkey);\r\n        return hotkey;\r\n    };\r\n    HotkeysService.prototype.unpause = function (hotkey) {\r\n        if (!hotkey) {\r\n            return this.unpause(this.pausedHotkeys);\r\n        }\r\n        if (Array.isArray(hotkey)) {\r\n            var temp = [];\r\n            for (var _i = 0, hotkey_4 = hotkey; _i < hotkey_4.length; _i++) {\r\n                var key = hotkey_4[_i];\r\n                temp.push(this.unpause(key));\r\n            }\r\n            return temp;\r\n        }\r\n        var index = this.pausedHotkeys.indexOf(hotkey);\r\n        if (index > -1) {\r\n            this.add(hotkey);\r\n            return this.pausedHotkeys.splice(index, 1);\r\n        }\r\n        return null;\r\n    };\r\n    HotkeysService.prototype.reset = function () {\r\n        this.mousetrap.reset();\r\n    };\r\n    HotkeysService.prototype.findHotkey = function (hotkey) {\r\n        return this.hotkeys.indexOf(hotkey);\r\n    };\r\n    return HotkeysService;\r\n}());\r\nHotkeysService = __decorate([\r\n    core_1.Injectable(),\r\n    __param(0, core_1.Inject(hotkey_options_1.HotkeyOptions)),\r\n    __metadata(\"design:paramtypes\", [Object])\r\n], HotkeysService);\r\nexports.HotkeysService = HotkeysService;\r\n"]}