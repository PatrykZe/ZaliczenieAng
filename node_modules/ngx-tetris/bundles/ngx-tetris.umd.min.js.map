{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ngx-tetris/classes/Piece.ts","ng://ngx-tetris/classes/Dot.ts","ng://ngx-tetris/classes/Box.ts","ng://ngx-tetris/classes/Line.ts","ng://ngx-tetris/classes/T.ts","ng://ngx-tetris/classes/Z.ts","ng://ngx-tetris/classes/S.ts","ng://ngx-tetris/classes/L.ts","ng://ngx-tetris/classes/Lr.ts","ng://ngx-tetris/classes/PiecesFactory.ts","ng://ngx-tetris/services/game-manager.service.ts","ng://ngx-tetris/tetris-core.component.ts","ng://ngx-tetris/tile/tile.component.ts","ng://ngx-tetris/board/board.component.ts","ng://ngx-tetris/public_api.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","DEG_0","DEG_90","DEG_180","DEG_270","Dot","Box","Line","T","L","Lr","Z","S","Piece","x","y","gridSize","maps","PieceRotation","_gridSize","_maps","map","rotation","defineProperty","acc","row","col","pos","width","store","_lastConfig","clearStore","revert","rotate","keys","idx","indexOf","toString","moveDown","moveRight","moveLeft","MAPS","undefined","PieceTypes","_super","_this","color","PieceColors","tslib_1.__extends","PiecesFactory","_available","getRandomPiecePiece","Math","floor","random","Tile","GameManagerService","tileSize","height","Subject","lineCleared$","_lineCleared","asObservable","gameOver$","_gameOver","initialize","gameSpeed","_gameSpeed","_piecesFactory","settings","_initializeEmptyBoard","_spawnNewPiece","_drawPiece","start","clearInterval","_gameInterval","setInterval","_update","_locked","stop","reset","emptyTile","grid","solid","__changeCell","_clearPiece","_piece","_collidesLeft","_collidesRight","_clearFullLines","isFull","emptyRow","apply","topPortion","slice","_a","splice","_collidesBottom","_markSolid","_isGameOver","_onGameOver","cellsCount","positionsOnGrid","forEach","data","assign","bottomRow","__collides","leftCol","rightCol","some","Injectable","Paused","Started","Over","TetrisCoreComponent","_manager","EventEmitter","GameState","subscribe","_onLineCleared","ngOnInit","initialSpeed","_moveDownSpeed","gridWidth","gridHeight","ngOnChanges","changes","_keyPressed","actionLeft","actionRight","actionRotate","actionDown","actionReset","actionStart","state","actionStop","key","currentValue","previousValue","lineCleared","emit","gameOver","Component","args","selector","template","Input","Output","TileComponent","el","_renderer","addClass","nativeElement","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","[style.width]","[style.height]","ElementRef","Renderer2","BoardComponent","ngAfterViewInit","oneTileSpace","tile","getBoundingClientRect","boardWidth","elementsInRow","ViewChild","TetrisCoreModule","forRoot","ngModule","NgModule","imports","CommonModule","declarations","providers","exports"],"mappings":"mZAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAAAO,EAA0BR,EAAGC,GAEzB,SAAAQ,IAAgBC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAGnF,SAAAK,EAwFuBC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAGX,SAAAM,IACI,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,SCxIPU,MAAA,EACAC,OAAA,EACAC,QAAA,EACAC,QAAA,OAHAH,OAAK,YACLC,QAAM,aACNC,SAAO,cACPC,SAAO,iBAKPC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,OAPAP,KAAG,UACHC,KAAG,UACHC,MAAI,WACJC,GAAC,QACDC,GAAC,QACDC,IAAE,SACFC,GAAC,QACDC,GAAC,UAKK,cACA,cACC,eACH,YACA,YACC,aACD,YACA,UAGRC,EAAA,WAcI,SAAAA,EAAYC,EAAGC,EAAGC,EAAUC,cAbpB,oBAGkBC,EAAcjB,eAGL,CAC/B,GAAI,qBAImB,KAGvBxB,KAAK0C,UAAYH,EACjBvC,KAAKqC,EAAIA,EACTrC,KAAKsC,EAAIA,EACTtC,KAAK2C,MAAQH,EAEbxC,KAAK4C,IAAM5C,KAAK2C,MAAM3C,KAAK6C,iBAG/BrD,OAAAsD,eAAIV,EAAAlC,UAAA,kBAAe,KAAnB,WAEI,IADA,IAAM6C,EAAM,GACHC,EAAM,EAAGA,EAAM,EAAGA,IACvB,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IACvB,GAAIjD,KAAK4C,IAAII,GAAKC,GAAM,CACpB,IAAMC,GAAOlD,KAAKsC,EAAIU,GAAOhD,KAAK0C,UAAUS,MAAQnD,KAAKqC,EAAIY,EACnD,EAANC,GACAH,EAAI9B,KAAKiC,GAMzB,OAAOH,mCAGJX,EAAAlC,UAAAkD,iBACHpD,KAAKqD,YAAc,CACfhB,EAAGrC,KAAKqC,EACRC,EAAGtC,KAAKsC,EACRO,SAAU7C,KAAK6C,SACfD,IAAK5C,KAAK4C,MAIXR,EAAAlC,UAAAoD,sBACHtD,KAAKqD,YAAc,MAGhBjB,EAAAlC,UAAAqD,kBACH,GAAIvD,KAAKqD,YAAa,CAClB,IAAK,IAAMhB,KAAKrC,KAAKqD,YACbrD,KAAKqD,YAAYxD,eAAewC,KAChCrC,KAAKqC,GAAKrC,KAAKqD,YAAYhB,IAInCrC,KAAKqD,YAAc,OAIpBjB,EAAAlC,UAAAsD,kBACH,IAAMC,EAAOjE,OAAOiE,KAAKzD,KAAK2C,OAC1Be,EAAMD,EAAKE,QAAQ3D,KAAK6C,SAASe,YACjCF,GAAOD,EAAKnC,OAAS,EACrBtB,KAAK6C,SAAWY,EAAK,GAErBzD,KAAK6C,SAAWY,IAAOC,GAG3B1D,KAAK4C,IAAM5C,KAAK2C,MAAM3C,KAAK6C,WAGxBT,EAAAlC,UAAA2D,oBACH7D,KAAKsC,KAGFF,EAAAlC,UAAA4D,qBACH9D,KAAKqC,KAGFD,EAAAlC,UAAA6D,oBACH/D,KAAKqC,KAGT7C,OAAAsD,eAAIV,EAAAlC,UAAA,YAAS,KAAb,WACI,OAAOF,KAAKsC,EAAI,mCAGpB9C,OAAAsD,eAAIV,EAAAlC,UAAA,WAAQ,KAAZ,WAEI,IADA,IAAI+C,EAAM,EACI,GAAPA,GAAU,CACb,IAAK,IAAID,EAAM,EAAGA,GAAO,EAAGA,IACxB,GAAIhD,KAAK4C,IAAII,GAAKC,GACd,OAAOjD,KAAKqC,EAAIY,EAGxBA,sCAKRzD,OAAAsD,eAAIV,EAAAlC,UAAA,UAAO,KAAX,WACI,OAAOF,KAAKqC,qCA1GpB,GC7BM2B,EAAO,GACbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAkBA,UAAcA,UAAcA,WAC/C,CAACA,UAAkBA,UAAcA,UAAcA,WAC/C,CAACA,UAAkBA,UAAcA,UAAcA,WAC/C,CAACC,EAAWrC,IAAOoC,UAAcA,UAAcA,YAGnD,IAAArC,EAAA,SAAAuC,GACI,SAAAvC,EAAYS,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHIC,EAAAA,EAAAA,KAAzB,CAAyBnC,GCRnB4B,EAAO,GACbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAkBA,UAAmBA,UAAcA,WACpD,CAACA,UAAkBA,UAAmBA,UAAcA,WACpD,CAACC,EAAWrC,IAAOqC,EAAWrC,IAAQoC,UAAcA,WACpD,CAACC,EAAWrC,IAAOqC,EAAWrC,IAAQoC,UAAcA,YAIxD,IAAApC,EAAA,SAAAsC,GACI,SAAAtC,EAAYQ,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHIC,EAAAA,EAAAA,KAAzB,CAAyBnC,GCTnB4B,EAAO,GACbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAmBA,UAAmBA,UAAkBA,WACzD,CAACA,UAAmBA,UAAmBA,UAAkBA,WACzD,CAACA,UAAmBA,UAAmBA,UAAkBA,WACzD,CAACC,EAAWpC,KAAQoC,EAAWpC,KAAQoC,EAAWpC,KAAOoC,EAAWpC,OAGxEkC,EAAKvB,EAAchB,QAAU,CACzB,CAACyC,EAAWpC,KAAQmC,UAAaA,UAAYA,WAC7C,CAACC,EAAWpC,KAAQmC,UAAaA,UAAYA,WAC7C,CAACC,EAAWpC,KAAQmC,UAAaA,UAAYA,WAC7C,CAACC,EAAWpC,KAAQmC,UAAaA,UAAYA,YAIjD,IAAAnC,EAAA,SAAAqC,GACI,SAAArC,EAAYO,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHKC,EAAAA,EAAAA,KAA1B,CAA0BnC,GCfpB4B,EAAO,GAEbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAgBA,UAAgBA,UAAgBA,WACjD,CAACA,UAAgBA,UAAgBA,UAAgBA,WACjD,CAACA,UAAgBC,EAAWnC,EAAKkC,UAAgBA,WACjD,CAACC,EAAWnC,EAAKmC,EAAWnC,EAAKmC,EAAWnC,EAAKkC,YAGrDD,EAAKvB,EAAchB,QAAU,CACzB,CAACwC,UAAgBA,UAAgBA,UAAaA,WAC9C,CAACC,EAAWnC,EAAKkC,UAAgBA,UAAaA,WAC9C,CAACC,EAAWnC,EAAKmC,EAAWnC,EAAKkC,UAAaA,WAC9C,CAACC,EAAWnC,EAAKkC,UAAgBA,UAAaA,YAGlDD,EAAKvB,EAAcf,SAAW,CAC1B,CAACuC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWnC,EAAKmC,EAAWnC,EAAKmC,EAAWnC,EAAIkC,WAChD,CAACA,UAAgBC,EAAWnC,EAAKkC,UAAeA,YAGpDD,EAAKvB,EAAcd,SAAW,CAC1B,CAACsC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBC,EAAWnC,EAAKkC,UAAeA,WAChD,CAACC,EAAWnC,EAAKmC,EAAWnC,EAAKkC,UAAeA,WAChD,CAACA,UAAgBC,EAAWnC,EAAKkC,UAAeA,YAGpD,IAAAlC,EAAA,SAAAoC,GACI,SAAApC,EAAYM,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHEC,EAAAA,EAAAA,KAAvB,CAAuBnC,GC9BjB4B,EAAO,GAEbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAgBA,UAAgBA,UAAaA,WAC9C,CAACA,UAAgBC,EAAWhC,EAAK+B,UAAaA,WAC9C,CAACC,EAAWhC,EAAKgC,EAAWhC,EAAK+B,UAAaA,WAC9C,CAACC,EAAWhC,EAAK+B,UAAgBA,UAAaA,YAGlDD,EAAKvB,EAAchB,QAAU,CACzB,CAACwC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWhC,EAAKgC,EAAWhC,EAAK+B,UAAeA,WAChD,CAACA,UAAgBC,EAAWhC,EAAKgC,EAAWhC,EAAI+B,YAGpD,IAAA/B,EAAA,SAAAiC,GACI,SAAAjC,EAAYG,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHEC,EAAAA,EAAAA,KAAvB,CAAuBnC,GChBjB4B,EAAO,GAEbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAeA,UAAgBA,UAAgBA,WAChD,CAACC,EAAW/B,EAAI8B,UAAgBA,UAAgBA,WAChD,CAACC,EAAW/B,EAAI+B,EAAW/B,EAAK8B,UAAgBA,WAChD,CAACA,UAAeC,EAAW/B,EAAK8B,UAAgBA,YAGpDD,EAAKvB,EAAchB,QAAU,CACzB,CAACwC,UAAeA,UAAgBA,UAAgBA,WAChD,CAACA,UAAeA,UAAgBA,UAAgBA,WAChD,CAACA,UAAeC,EAAW/B,EAAK+B,EAAW/B,EAAK8B,WAChD,CAACC,EAAW/B,EAAI+B,EAAW/B,EAAK8B,UAAgBA,YAGpD,IAAA9B,EAAA,SAAAgC,GACI,SAAAhC,EAAYE,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHEC,EAAAA,EAAAA,KAAvB,CAAuBnC,GChBjB4B,EAAO,GAEbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAgBA,UAAgBA,UAAaA,WAC9C,CAACC,EAAWlC,EAAKiC,UAAgBA,UAAaA,WAC9C,CAACC,EAAWlC,EAAKiC,UAAgBA,UAAaA,WAC9C,CAACC,EAAWlC,EAAKkC,EAAWlC,EAAKiC,UAAaA,YAGlDD,EAAKvB,EAAchB,QAAU,CACzB,CAACwC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWlC,EAAKkC,EAAWlC,EAAKkC,EAAWlC,EAAIiC,WAChD,CAACC,EAAWlC,EAAKiC,UAAgBA,UAAeA,YAGpDD,EAAKvB,EAAcf,SAAW,CAC1B,CAACuC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWlC,EAAKkC,EAAWlC,EAAKiC,UAAeA,WAChD,CAACA,UAAgBC,EAAWlC,EAAKiC,UAAeA,WAChD,CAACA,UAAgBC,EAAWlC,EAAKiC,UAAeA,YAGpDD,EAAKvB,EAAcd,SAAW,CAC1B,CAACsC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBC,EAAWlC,EAAIiC,WAChD,CAACC,EAAWlC,EAAKkC,EAAWlC,EAAKkC,EAAWlC,EAAIiC,YAGpD,IAAAjC,EAAA,SAAAmC,GACI,SAAAnC,EAAYK,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHEC,EAAAA,EAAAA,KAAvB,CAAuBnC,GC9BjB4B,EAAO,GAEbA,EAAKvB,EAAcjB,OAAS,CACxB,CAACyC,UAAgBA,UAAgBA,UAAgBA,WACjD,CAACC,EAAWjC,GAAKiC,EAAWjC,GAAKgC,UAAgBA,WACjD,CAACA,UAAgBC,EAAWjC,GAAKgC,UAAgBA,WACjD,CAACA,UAAgBC,EAAWjC,GAAKgC,UAAgBA,YAGrDD,EAAKvB,EAAchB,QAAU,CACzB,CAACwC,UAAiBA,UAAgBA,UAAiBA,WACnD,CAACA,UAAiBA,UAAgBA,UAAiBA,WACnD,CAACA,UAAiBA,UAAgBC,EAAWjC,GAAMgC,WACnD,CAACC,EAAWjC,GAAMiC,EAAWjC,GAAKiC,EAAWjC,GAAMgC,YAGvDD,EAAKvB,EAAcf,SAAW,CAC1B,CAACuC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWjC,GAAKgC,UAAgBA,UAAeA,WAChD,CAACC,EAAWjC,GAAKgC,UAAgBA,UAAeA,WAChD,CAACC,EAAWjC,GAAKiC,EAAWjC,GAAKgC,UAAeA,YAGpDD,EAAKvB,EAAcd,SAAW,CAC1B,CAACsC,UAAgBA,UAAgBA,UAAeA,WAChD,CAACA,UAAgBA,UAAgBA,UAAeA,WAChD,CAACC,EAAWjC,GAAKiC,EAAWjC,GAAKiC,EAAWjC,GAAIgC,WAChD,CAACC,EAAWjC,GAAKgC,UAAgBA,UAAeA,YAGpD,IAAAhC,EAAA,SAAAkC,GACI,SAAAlC,EAAYI,EAAGC,EAAGC,GAAlB,IAAA6B,EACID,EAAAtD,KAAAb,KAAMqC,EAAGC,EAAGC,EAAUyB,IAAKhE,YAC3BoE,EAAKC,MAAQC,WAHGC,EAAAA,EAAAA,KAAxB,CAAwBnC,GCxBxBoC,EAAA,WAII,SAAAA,EAAYjC,mBAHS,GAIjBvC,KAAK0C,UAAYH,EAEjBvC,KAAKyE,WAAWxD,KAAKW,GACrB5B,KAAKyE,WAAWxD,KAAKY,GACrB7B,KAAKyE,WAAWxD,KAAKa,GACrB9B,KAAKyE,WAAWxD,KAAKc,GACrB/B,KAAKyE,WAAWxD,KAAKiB,GACrBlC,KAAKyE,WAAWxD,KAAKkB,GACrBnC,KAAKyE,WAAWxD,KAAKe,GACrBhC,KAAKyE,WAAWxD,KAAKgB,UAGlBuC,EAAAtE,UAAAwE,6BAAoBrC,EAAGC,GAC1B,IAAMoB,EAAMiB,KAAKC,MAAMD,KAAKE,SAAY7E,KAAKyE,WAAiB,QAE9D,OAAO,IAAIzE,KAAKyE,WAAWf,GAAKrB,EAAGC,EAAGtC,KAAK0C,cApBnD,GCAAoC,2BACY,aACA,MAFZC,EAAA,WAoCI,SAAAA,kBA7BkB,CACdC,SAAU,qBAgBV,CAAE7B,MAAO,EAAG8B,OAAQ,iBAKN,oBAIK,IAAIC,EAAAA,uBACP,IAAIA,EAAAA,QAGpBlF,KAAKmF,aAAenF,KAAKoF,aAAaC,eACtCrF,KAAKsF,UAAYtF,KAAKuF,UAAUF,4CA3BzBN,EAAA7E,UAAA,gBAAa,gBACpB,OAAOF,KAAK0C,UAAUS,uCA6BnB4B,EAAA7E,UAAAsF,oBAAWrC,EAAe8B,EAAgBQ,EAAWT,GACxDhF,KAAK0C,UAAUS,MAAQA,EACvBnD,KAAK0C,UAAUuC,OAASA,EACxBjF,KAAK0F,WAAaD,EAClBzF,KAAK2F,eAAiB,IAAInB,EAAcxE,KAAK0C,WAEzCsC,IACAhF,KAAK4F,SAASZ,SAAWA,GAG7BhF,KAAK6F,wBAEL7F,KAAK8F,iBACL9F,KAAK+F,cAGFhB,EAAA7E,UAAA8F,4BACHC,cAAcjG,KAAKkG,eACnBlG,KAAKkG,cAAgBC,YAAY,WAC7B/B,EAAKgC,WACNpG,KAAK0F,YACR1F,KAAKqG,SAAU,GAGZtB,EAAA7E,UAAAoG,gBACHtG,KAAKqG,SAAU,EACfJ,cAAcjG,KAAKkG,gBAGhBnB,EAAA7E,UAAAqG,iBAEH,IADA,IAAMC,EAAY,IAAI1B,EACb5B,EAAM,EAAGA,EAAMlD,KAAKyG,KAAKnF,OAAQ4B,KAClClD,KAAKyG,KAAKvD,GAAKmB,OAASrE,KAAKyG,KAAKvD,GAAKwD,QACvC1G,KAAK2G,aAAazD,EAAKsD,GAI/BxG,KAAK8F,iBACL9F,KAAK+F,cAGFhB,EAAA7E,UAAA6D,oBACC/D,KAAKqG,UAGTrG,KAAK4G,cACL5G,KAAK6G,OAAOzD,QAEZpD,KAAK6G,OAAO9C,WACR/D,KAAK8G,iBACL9G,KAAK6G,OAAOtD,SAGhBvD,KAAK+F,eAGFhB,EAAA7E,UAAA4D,qBACC9D,KAAKqG,UAGTrG,KAAK4G,cACL5G,KAAK6G,OAAOzD,QAEZpD,KAAK6G,OAAO/C,YACR9D,KAAK+G,kBACL/G,KAAK6G,OAAOtD,SAGhBvD,KAAK+F,eAGFhB,EAAA7E,UAAAsD,kBACH,IAAIxD,KAAKqG,QAAT,CAQA,IAJArG,KAAK4G,cACL5G,KAAK6G,OAAOzD,QAEZpD,KAAK6G,OAAOrD,SACLxD,KAAK+G,kBAGR,GAFA/G,KAAK6G,OAAO9C,WAER/D,KAAK8G,gBAAiB,CACtB9G,KAAK6G,OAAOtD,SACZ,MAIRvD,KAAK+F,eAGFhB,EAAA7E,UAAA2D,oBACH7D,KAAKoG,WAGDrB,EAAA7E,UAAA8G,2BACJ,IAAK,IAAIhE,EAAMhD,KAAK0C,UAAUuC,OAAS,EAAU,GAAPjC,EAAUA,IAAO,CAEvD,IADA,IAAIiE,GAAS,EACJhE,EAAM,EAAGA,EAAMjD,KAAK0C,UAAUS,MAAOF,IAAO,CACjD,IAAMC,EAAMF,EAAMhD,KAAK0C,UAAUS,MAAQF,EACzC,IAA6B,IAAzBjD,KAAKyG,KAAKvD,GAAKwD,MAAiB,CAChCO,GAAS,EACT,OAIR,GAAIA,EAAQ,CACR,IAAMC,EAAWvH,MAAMwH,MAAM,KAAMxH,MAAMK,KAAK0C,UAAUS,QACnDP,IAAI,SAACc,GAAQ,OAAA,IAAIoB,IAEhBsC,EAAapH,KAAKyG,KAAKY,MAAM,EAAGrE,EAAMhD,KAAK0C,UAAUS,QAE3DmE,EAAAtH,KAAKyG,MAAKc,OAAMJ,MAAAG,EAAAlG,EAAA,CAAC,IAAK4B,EAAMhD,KAAK0C,UAAUS,OAAU+D,EAAS3F,OAAO6F,KACrEpH,KAAKoF,aAAarE,eAKtBgE,EAAA7E,UAAAkG,mBACApG,KAAKqG,UAGTrG,KAAKqG,SAAU,EACfrG,KAAK6G,OAAOtD,SAEZvD,KAAK4G,cACL5G,KAAK6G,OAAOzD,QAEZpD,KAAK6G,OAAOhD,WACR7D,KAAKwH,oBACLxH,KAAK6G,OAAOtD,SACZvD,KAAKyH,aACLzH,KAAK+F,aAEL/F,KAAKgH,kBAELhH,KAAK8F,iBACD9F,KAAK0H,eACL1H,KAAK2H,eAKb3H,KAAK+F,aACL/F,KAAKqG,SAAU,KAGXtB,EAAA7E,UAAAwH,uBAGJ,OAFA1H,KAAK6G,OAAOzD,QACZpD,KAAK6G,OAAOhD,aACR7D,KAAKwH,oBAITxH,KAAK6G,OAAOtD,UACL,IAGHwB,EAAA7E,UAAAyH,uBACJ3H,KAAKsG,OACLtG,KAAKuF,UAAUxE,QAGXgE,EAAA7E,UAAA4F,0BACJ9F,KAAK6G,OAAS7G,KAAK2F,eAAejB,oBAjNjB,GACA,IAmNbK,EAAA7E,UAAA2F,iCACJ,IAAM+B,EAAa5H,KAAK0C,UAAUS,MAAQnD,KAAK0C,UAAUuC,OACzDjF,KAAKyG,KAAO9G,MAAMwH,MAAM,KAAMxH,MAAMiI,IAC/BhF,IAAI,SAACc,GAAQ,OAAA,IAAIoB,KAGlBC,EAAA7E,UAAA0G,kCACJ5G,KAAK6G,OAAOgB,gBACPC,QAAQ,SAAC5E,GACNkB,EAAKuC,aAAazD,EAAK,CAACmB,MAAOJ,eAInCc,EAAA7E,UAAA6F,iCACJ/F,KAAK6G,OAAOvD,aACZtD,KAAK6G,OAAOgB,gBACPC,QAAQ,SAAC5E,GACNkB,EAAKuC,aAAazD,EAAK,CAACmB,MAAOD,EAAKyC,OAAOxC,WAI/CU,EAAA7E,UAAAuH,iCACJzH,KAAK6G,OAAOgB,gBAAgBC,QAAQ,SAAC5E,GACjCkB,EAAKuC,aAAazD,EAAK,CAACwD,OAAO,OAI/B3B,EAAA7E,UAAAyG,sBAAazD,EAAK6E,QAAA,IAAAA,IAAAA,EAAA,IACtB/H,KAAKyG,KAAKvD,GAAO1D,OAAOwI,OAAO,GAAIhI,KAAKyG,KAAKvD,GAAM6E,IAG/ChD,EAAA7E,UAAAsH,2BACJ,OAAIxH,KAAK6G,OAAOoB,WAAajI,KAAK0C,UAAUuC,QAGrCjF,KAAKkI,cAGRnD,EAAA7E,UAAA4G,yBACJ,OAAI9G,KAAK6G,OAAOsB,QAAU,GAInBnI,KAAKkI,cAGRnD,EAAA7E,UAAA6G,0BACJ,OAAI/G,KAAK6G,OAAOuB,UAAYpI,KAAK0C,UAAUS,OAIpCnD,KAAKkI,cAGRnD,EAAA7E,UAAAgI,iCACJ,OAAOlI,KAAK6G,OAAOgB,gBACdQ,KAAK,SAACnF,GACH,SAAU,EAANA,GAAWkB,EAAKqC,KAAKvD,IAAQkB,EAAKqC,KAAKvD,GAAKwD,8BArQ/D4B,EAAAA,qDALD,MCFIC,OAAA,EACAC,QAAA,EACAC,KAAA,OAFAF,QAAM,aACNC,SAAO,cACPC,MAAI,wBA+BJ,SAAAC,EAAoBC,GAApB,IAAAvE,EAAApE,KAAoBA,KAAA2I,SAAAA,eAnBF,iBACE,kBACC,iBACD,cACH,aACD,cACC,mBAE0B,IAAIC,EAAAA,2BACP,IAAIA,EAAAA,wBAGlBC,EAAUN,sBAExB,mBACC,GAKTvI,KAAK2I,SAASxD,aAAa2D,UAAU,SAACf,GAAS,OAAA3D,EAAK2E,eAAehB,KACnE/H,KAAK2I,SAASrD,UAAUwD,UAAU,SAACf,GAAS,OAAA3D,EAAKuD,YAAYI,YAGjEW,EAAAxI,UAAA8I,SAAA,WAAA,IAAA5E,EAAApE,KACEA,KAAKiJ,aAAejJ,KAAKiJ,cA3CZ,IA4CbjJ,KAAKkJ,eA3Ca,GA2CIlJ,KAAKiJ,aAE3BjJ,KAAK2I,SAASnD,WAAWxF,KAAKmJ,UAAWnJ,KAAKoJ,WAAYpJ,KAAKiJ,aAAcjJ,KAAKgF,UAClFhF,KAAKyG,KAAOzG,KAAK2I,SAASlC,KAE1BN,YAAY,WACN/B,EAAKP,UACPO,EAAKuE,SAAS9E,YAGf7D,KAAKkJ,iBAGVR,EAAAxI,UAAAmJ,YAAA,SAAYC,GACJtJ,KAAKuJ,YAAYD,EAAQvF,UACzB/D,KAAK2I,SAAS5E,WAEP/D,KAAKuJ,YAAYD,EAAQxF,YAChC9D,KAAK2I,SAAS7E,YAGd9D,KAAKuJ,YAAYD,EAAQ9F,SAAWxD,KAAK2I,SAASnF,SAClDxD,KAAKuJ,YAAYD,EAAQtD,QAAWhG,KAAK2I,SAAS3C,QAClDhG,KAAKuJ,YAAYD,EAAQhD,OAAUtG,KAAK2I,SAASrC,OACjDtG,KAAKuJ,YAAYD,EAAQ/C,QAAWvG,KAAK2I,SAASpC,SAGnDmC,EAAAxI,UAAAsJ,sBAAexJ,KAAK2I,SAAS5E,YAC7B2E,EAAAxI,UAAAuJ,uBAAgBzJ,KAAK2I,SAAS7E,aAC9B4E,EAAAxI,UAAAwJ,wBAAiB1J,KAAK2I,SAASnF,UAC/BkF,EAAAxI,UAAAyJ,sBAAe3J,KAAK2I,SAAS9E,YAC7B6E,EAAAxI,UAAA0J,uBAAgB5J,KAAK2I,SAASpC,SAE9BmC,EAAAxI,UAAA2J,uBACH7J,KAAK2I,SAAS3C,QACdhG,KAAK8J,MAAQjB,EAAUL,SAEpBE,EAAAxI,UAAA6J,sBACH/J,KAAK2I,SAASrC,OACdtG,KAAK8J,MAAQjB,EAAUN,QAGnBG,EAAAxI,UAAAqJ,qBAAYS,GAChB,OAAOA,GAAOA,EAAIC,eAAiBD,EAAIE,eAGnCxB,EAAAxI,UAAA6I,wBAAehB,GACnB/H,KAAKmK,YAAYC,KAAKrC,IAGlBW,EAAAxI,UAAAyH,qBAAYI,GAChB/H,KAAK8J,MAAQjB,EAAUJ,KACvBzI,KAAKqK,SAASD,4BAvFrBE,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,cACVC,SAAA,oFAbI1F,uCAiBH2F,EAAAA,4BAEAA,EAAAA,sBACAA,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,2BAEAC,EAAAA,yBACAA,EAAAA,eC9BLC,EAAA,WA2BI,SAAAA,EACWC,EACCC,EACAnC,GAFD3I,KAAA6K,GAAAA,EACC7K,KAAA8K,UAAAA,EACA9K,KAAA2I,SAAAA,gBALM,KAOV3I,KAAK2I,SAAS/C,SAASZ,WACvBhF,KAAKgF,SAAWhF,KAAK2I,SAAS/C,SAASZ,iBAK/C4F,EAAA1K,UAAA8I,SAAA,WACQhJ,KAAK+H,KAAK1D,OACVrE,KAAK8K,UAAUC,SAAS/K,KAAK6K,GAAGG,cAAehL,KAAK+H,KAAK1D,4BA7BpEiG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,OACVC,SAAA,GAEAQ,cAAeC,EAAAA,kBAAkBC,KACjCC,gBAAiBC,EAAAA,wBAAwBC,OAEzCC,KAAM,CACFC,gBAAiB,WACjBC,iBAAkB,ocAjBtBC,EAAAA,kBAGAC,EAAAA,iBAGI5G,mCAeH2F,EAAAA,WAxBL,GCAAkB,EAAA,WAiBI,SAAAA,EAAoBjD,GAAA3I,KAAA2I,SAAAA,kBAFA,YAMpBiD,EAAA1L,UAAA2L,gBAAA,WACI,GAAI7L,KAAK2I,SAAS/C,SAASZ,SAAU,CACjC,IAEM8G,EAFK9L,KAAK+L,KAAKlB,GAAGG,cAAcgB,wBAEd7I,MAAQ,EAChCnD,KAAKiM,WAAaH,EAAe9L,KAAK2I,SAASuD,oCAtB1D5B,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,QACVC,SAAA,yEAEAc,KAAM,CACFC,gBAAiB,8GARjBzG,mCAYH2F,EAAAA,oBACAyB,EAAAA,UAAS5B,KAAA,CAACK,QAdf,GCAAwB,EAAA,gCAwBWA,EAAAC,QAAP,WACI,MAAO,CACHC,SAAUF,wBAjBrBG,EAAAA,SAAQhC,KAAA,CAAC,CACNiC,QAAS,CACLC,EAAAA,cAEJC,aAAc,CACVhE,EACAkD,EACAhB,GAEJ+B,UAAW,CACP5H,GAEJ6H,QAAS,CAAClE,SArBd","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum PieceRotation {\n    DEG_0 = 0,\n    DEG_90 = 1,\n    DEG_180 = 2,\n    DEG_270 = 3\n}\n\n\nexport enum PieceTypes {\n    Dot = 1,\n    Box = 2,\n    Line = 3,\n    T = 4,\n    L = 5,\n    Lr = 6,\n    Z = 7,\n    S = 8\n}\n\n// picked from https://www.romanzolotarev.com/pico-8-color-palette/\nexport enum PieceColors {\n    Box = 'color-box',\n    Dot = 'color-dot',\n    Line = 'color-line',\n    T = 'color-t',\n    L = 'color-l',\n    Lr = 'color-lr',\n    Z = 'color-z',\n    S = 'color-s'\n}\n\nexport class Piece {\n    color = 'red';\n    x: number;\n    y: number;\n    rotation: PieceRotation = PieceRotation.DEG_0;\n\n    private _maps: {};\n    public map: Array<Array<number>> = [\n        [], []\n    ];\n\n    private _gridSize;\n    private _lastConfig: any = null;\n\n    constructor(x, y, gridSize, maps) {\n        this._gridSize = gridSize;\n        this.x = x;\n        this.y = y;\n        this._maps = maps;\n\n        this.map = this._maps[this.rotation];\n    }\n\n    get positionsOnGrid() {\n        const acc = [];\n        for (let row = 0; row < 4; row++) {\n            for (let col = 0; col < 4; col++) {\n                if (this.map[row][col]) {\n                    const pos = (this.y + row) * this._gridSize.width + this.x + col;\n                    if (pos > 0) {\n                        acc.push(pos);\n                    }\n                }\n            }\n        }\n\n        return acc;\n    }\n\n    public store() {\n        this._lastConfig = {\n            x: this.x,\n            y: this.y,\n            rotation: this.rotation,\n            map: this.map\n        };\n    }\n\n    public clearStore() {\n        this._lastConfig = null;\n    }\n\n    public revert() {\n        if (this._lastConfig) {\n            for (const x in this._lastConfig) {\n                if (this._lastConfig.hasOwnProperty(x)) {\n                    this[x] = this._lastConfig[x];\n                }\n            }\n\n            this._lastConfig = null;\n        }\n    }\n\n    public rotate() {\n        const keys = Object.keys(this._maps);\n        let idx = keys.indexOf(this.rotation.toString());\n        if (idx >= keys.length - 1) {\n            this.rotation = keys[0] as any;\n        } else {\n            this.rotation = keys[++idx] as any;\n        }\n\n        this.map = this._maps[this.rotation];\n    }\n\n    public moveDown() {\n        this.y++;\n    }\n\n    public moveRight() {\n        this.x++;\n    }\n\n    public moveLeft() {\n        this.x--;\n    }\n\n    get bottomRow() {\n        return this.y + 3;\n    }\n\n    get rightCol() {\n        let col = 3;\n        while (col >= 0) {\n            for (let row = 0; row <= 3; row++) {\n                if (this.map[row][col]) {\n                    return this.x + col;\n                }\n            }\n            col--;\n        }\n\n    }\n\n    get leftCol() {\n        return this.x;\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,        undefined,    undefined,    undefined],\n    [undefined,        undefined,    undefined,    undefined],\n    [undefined,        undefined,    undefined,    undefined],\n    [PieceTypes.Box,   undefined,    undefined,    undefined],\n];\n\nexport class Dot extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Dot'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,        undefined,         undefined,    undefined],\n    [undefined,        undefined,         undefined,    undefined],\n    [PieceTypes.Box,   PieceTypes.Box,    undefined,    undefined],\n    [PieceTypes.Box,   PieceTypes.Box,    undefined,    undefined],\n];\n\n\nexport class Box extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Box'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,         undefined,         undefined,        undefined],\n    [undefined,         undefined,         undefined,        undefined],\n    [undefined,         undefined,         undefined,        undefined],\n    [PieceTypes.Line,   PieceTypes.Line,   PieceTypes.Line,  PieceTypes.Line],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n];\n\n\nexport class Line extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Line'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,      undefined],\n    [undefined,      undefined,      undefined,      undefined],\n    [undefined,      PieceTypes.T,   undefined,      undefined],\n    [PieceTypes.T,   PieceTypes.T,   PieceTypes.T,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [PieceTypes.T,   undefined,      undefined,   undefined],\n    [PieceTypes.T,   PieceTypes.T,   undefined,   undefined],\n    [PieceTypes.T,   undefined,      undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.T,   PieceTypes.T,   PieceTypes.T,  undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n    [PieceTypes.T,   PieceTypes.T,   undefined,     undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n];\n\nexport class T extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['T'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [undefined,      PieceTypes.Z,   undefined,   undefined],\n    [PieceTypes.Z,   PieceTypes.Z,   undefined,   undefined],\n    [PieceTypes.Z,   undefined,      undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Z,   PieceTypes.Z,   undefined,     undefined],\n    [undefined,      PieceTypes.Z,   PieceTypes.Z,  undefined],\n];\n\nexport class Z extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Z'];\n    }\n}\n\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,     undefined,      undefined,      undefined],\n    [PieceTypes.S,  undefined,      undefined,      undefined],\n    [PieceTypes.S,  PieceTypes.S,   undefined,      undefined],\n    [undefined,     PieceTypes.S,   undefined,      undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,     undefined,      undefined,      undefined],\n    [undefined,     undefined,      undefined,      undefined],\n    [undefined,     PieceTypes.S,   PieceTypes.S,   undefined],\n    [PieceTypes.S,  PieceTypes.S,   undefined,      undefined],\n];\n\nexport class S extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['S'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [PieceTypes.L,   undefined,      undefined,   undefined],\n    [PieceTypes.L,   undefined,      undefined,   undefined],\n    [PieceTypes.L,   PieceTypes.L,   undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.L,   PieceTypes.L,   PieceTypes.L,  undefined],\n    [PieceTypes.L,   undefined,      undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.L,   PieceTypes.L,   undefined,     undefined],\n    [undefined,      PieceTypes.L,   undefined,     undefined],\n    [undefined,      PieceTypes.L,   undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      PieceTypes.L,  undefined],\n    [PieceTypes.L,   PieceTypes.L,   PieceTypes.L,  undefined],\n];\n\nexport class L extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['L'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,      undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  undefined,      undefined],\n    [undefined,      PieceTypes.Lr,  undefined,      undefined],\n    [undefined,      PieceTypes.Lr,  undefined,      undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,       undefined,      undefined,       undefined],\n    [undefined,       undefined,      undefined,       undefined],\n    [undefined,       undefined,      PieceTypes.Lr,   undefined],\n    [PieceTypes.Lr,   PieceTypes.Lr,  PieceTypes.Lr,   undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  PieceTypes.Lr, undefined],\n    [PieceTypes.Lr,  undefined ,     undefined,     undefined],\n];\n\nexport class Lr extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Lr'];\n    }\n}\n","import {Dot} from './Dot';\nimport {Box} from './Box';\nimport {Line} from './Line';\nimport {T} from './T';\nimport {Z} from './Z';\nimport {S} from './S';\nimport {L} from './L';\nimport {Lr} from './Lr';\n\nexport class PiecesFactory {\n    private _available = [];\n    private _gridSize;\n\n    constructor(gridSize) {\n        this._gridSize = gridSize;\n\n        this._available.push(Dot);\n        this._available.push(Box);\n        this._available.push(Line);\n        this._available.push(T);\n        this._available.push(Z);\n        this._available.push(S);\n        this._available.push(L);\n        this._available.push(Lr);\n    }\n\n    public getRandomPiecePiece(x, y) {\n        const idx = Math.floor(Math.random() * (this._available.length));\n\n        return new this._available[idx](x, y, this._gridSize);\n        // return new this._available[2](x, y, this._gridSize);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Piece} from '../classes/Piece';\nimport {PiecesFactory} from '../classes/PiecesFactory';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Subject} from 'rxjs/internal/Subject';\n\nconst SPAWN_POSITION_X = 4;\nconst SPAWN_POSITION_Y = -4;\n\nexport class Tile {\n    solid = false;\n    color = null;\n}\n\n@Injectable()\nexport class GameManagerService {\n    public settings = {\n        tileSize: null\n    };\n\n    public get elementsInRow() {\n        return this._gridSize.width;\n    }\n\n    // serialized grid :)\n    public grid: Array<Tile>;\n\n    public lineCleared$: Observable<any>;\n    public gameOver$: Observable<any>;\n\n    private _gridSize: {\n        width: number,\n        height: number\n    } = { width: 0, height: 0 };\n\n    private _piece: Piece;\n    private _piecesFactory: PiecesFactory;\n\n    private _locked = true;\n    private _gameSpeed: number;\n    private _gameInterval;\n\n    private _lineCleared = new Subject<any>();\n    private _gameOver = new Subject<any>();\n\n    constructor() {\n        this.lineCleared$ = this._lineCleared.asObservable();\n        this.gameOver$ = this._gameOver.asObservable();\n    }\n\n    public initialize(width: number, height: number, gameSpeed, tileSize?: any) {\n        this._gridSize.width = width;\n        this._gridSize.height = height;\n        this._gameSpeed = gameSpeed;\n        this._piecesFactory = new PiecesFactory(this._gridSize);\n\n        if (tileSize) {\n            this.settings.tileSize = tileSize;\n        }\n\n        this._initializeEmptyBoard();\n\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n\n    public start() {\n        clearInterval(this._gameInterval);\n        this._gameInterval = setInterval(() => {\n            this._update();\n        }, this._gameSpeed);\n        this._locked = false;\n    }\n\n    public stop() {\n        this._locked = true;\n        clearInterval(this._gameInterval);\n    }\n\n    public reset() {\n        const emptyTile = new Tile();\n        for (let pos = 0; pos < this.grid.length; pos++) {\n            if (this.grid[pos].color || this.grid[pos].solid) {\n                this.__changeCell(pos, emptyTile);\n            }\n        }\n\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n\n    public moveLeft() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveLeft();\n        if (this._collidesLeft()) {\n            this._piece.revert();\n        }\n\n        this._drawPiece();\n    }\n\n    public moveRight() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveRight();\n        if (this._collidesRight()) {\n            this._piece.revert();\n        }\n\n        this._drawPiece();\n    }\n\n    public rotate() {\n        if (this._locked) {\n            return;\n        }\n\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.rotate();\n        while (this._collidesRight()) {\n            this._piece.moveLeft();\n\n            if (this._collidesLeft()) {\n                this._piece.revert();\n                break;\n            }\n        }\n\n        this._drawPiece();\n    }\n\n    public moveDown() {\n        this._update();\n    }\n\n    private _clearFullLines() {\n        for (let row = this._gridSize.height - 1; row >= 0; row--) {\n            let isFull = true;\n            for (let col = 0; col < this._gridSize.width; col++) {\n                const pos = row * this._gridSize.width + col;\n                if (this.grid[pos].solid === false) {\n                    isFull = false;\n                    break;\n                }\n            }\n\n            if (isFull) {\n                const emptyRow = Array.apply(null, Array(this._gridSize.width))\n                    .map((idx) => new Tile());\n\n                const topPortion = this.grid.slice(0, row * this._gridSize.width);\n\n                this.grid.splice(0, ++row * this._gridSize.width, ...emptyRow.concat(topPortion));\n                this._lineCleared.next();\n            }\n        }\n    }\n\n    private _update() {\n        if (this._locked) {\n            return;\n        }\n        this._locked = true;\n        this._piece.revert();\n\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            this._piece.revert();\n            this._markSolid();\n            this._drawPiece();\n\n            this._clearFullLines();\n\n            this._spawnNewPiece();\n            if (this._isGameOver()) {\n                this._onGameOver();\n                return;\n            }\n        }\n\n        this._drawPiece();\n        this._locked = false;\n    }\n\n    private _isGameOver() {\n        this._piece.store();\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            return true;\n        }\n\n        this._piece.revert();\n        return false;\n    }\n\n    private _onGameOver() {\n        this.stop();\n        this._gameOver.next();\n    }\n\n    private _spawnNewPiece() {\n        this._piece = this._piecesFactory.getRandomPiecePiece(SPAWN_POSITION_X, SPAWN_POSITION_Y);\n    }\n\n    private _initializeEmptyBoard() {\n        const cellsCount = this._gridSize.width * this._gridSize.height;\n        this.grid = Array.apply(null, Array(cellsCount))\n            .map((idx) => new Tile());\n    }\n\n    private _clearPiece() {\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n                this.__changeCell(pos, {color: undefined});\n            });\n    }\n\n    private _drawPiece() {\n        this._piece.clearStore();\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n                this.__changeCell(pos, {color: this._piece.color});\n            });\n    }\n\n    private _markSolid() {\n        this._piece.positionsOnGrid.forEach((pos) => {\n            this.__changeCell(pos, {solid: true});\n        });\n    }\n\n    private __changeCell(pos, data = {}) {\n        this.grid[pos] = Object.assign({}, this.grid[pos], data);\n    }\n\n    private _collidesBottom() {\n        if (this._piece.bottomRow >= this._gridSize.height) {\n            return true;\n        }\n        return this.__collides();\n    }\n\n    private _collidesLeft() {\n        if (this._piece.leftCol < 0) {\n            return true;\n        }\n\n        return this.__collides();\n    }\n\n    private _collidesRight() {\n        if (this._piece.rightCol >= this._gridSize.width) {\n            return true;\n        }\n\n        return this.__collides();\n    }\n\n    private __collides() {\n        return this._piece.positionsOnGrid\n            .some((pos) => {\n                if (pos > 0 && this.grid[pos] && this.grid[pos].solid) {\n                    return true;\n                }\n\n                return false;\n            });\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {GameManagerService, Tile} from './services/game-manager.service';\n\nconst GAME_SPEED = 500;\nconst MOVE_DOWN_SPEED = 0.2; // fraction of initial game speed\n\nexport enum GameState {\n    Paused = 0,\n    Started = 1,\n    Over = 2\n}\n\n@Component({\n    selector: 'tetris-core',\n    templateUrl: './tetris-core.component.html',\n    // styleUrls: ['./tetris-core.component.css']\n})\nexport class TetrisCoreComponent implements OnInit, OnChanges {\n    @Input() tileSize: any;\n\n    @Input() initialSpeed: number;\n    @Input() rotate = false;\n    @Input() moveLeft = false;\n    @Input() moveRight = false;\n    @Input() moveDown = false;\n    @Input() start = false;\n    @Input() stop = false;\n    @Input() reset = false;\n\n    @Output() lineCleared: EventEmitter<any> = new EventEmitter();\n    @Output() gameOver: EventEmitter<any> = new EventEmitter();\n\n    public grid: Array<Tile>;\n    public state: GameState = GameState.Paused;\n\n    gridWidth = 10;\n    gridHeight = 20;\n\n    private _moveDownSpeed;\n\n    constructor(private _manager: GameManagerService) {\n        this._manager.lineCleared$.subscribe((data) => this._onLineCleared(data));\n        this._manager.gameOver$.subscribe((data) => this._onGameOver(data));\n    }\n\n    ngOnInit() {\n      this.initialSpeed = this.initialSpeed || GAME_SPEED;\n      this._moveDownSpeed = this.initialSpeed * MOVE_DOWN_SPEED;\n\n      this._manager.initialize(this.gridWidth, this.gridHeight, this.initialSpeed, this.tileSize);\n      this.grid = this._manager.grid;\n\n      setInterval(() => {\n        if (this.moveDown) {\n          this._manager.moveDown();\n        }\n\n      }, this._moveDownSpeed);\n    }\n\n    ngOnChanges(changes) {\n        if (this._keyPressed(changes.moveLeft)) {\n            this._manager.moveLeft();\n\n        } else if (this._keyPressed(changes.moveRight)) {\n            this._manager.moveRight();\n        }\n\n        if (this._keyPressed(changes.rotate)) { this._manager.rotate(); }\n        if (this._keyPressed(changes.start))  { this._manager.start(); }\n        if (this._keyPressed(changes.stop))  { this._manager.stop(); }\n        if (this._keyPressed(changes.reset))  { this._manager.reset(); }\n    }\n\n    public actionLeft() { this._manager.moveLeft(); }\n    public actionRight() { this._manager.moveRight(); }\n    public actionRotate() { this._manager.rotate(); }\n    public actionDown() { this._manager.moveDown(); }\n    public actionReset() { this._manager.reset(); }\n\n    public actionStart() {\n        this._manager.start();\n        this.state = GameState.Started;\n    }\n    public actionStop() {\n        this._manager.stop();\n        this.state = GameState.Paused;\n    }\n\n    private _keyPressed(key) {\n        return key && key.currentValue && !key.previousValue;\n    }\n\n    private _onLineCleared(data) {\n        this.lineCleared.emit(data);\n    }\n\n    private _onGameOver(data) {\n        this.state = GameState.Over;\n        this.gameOver.emit();\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport {GameManagerService, Tile} from '../services/game-manager.service';\n\n@Component({\n    selector: 'tile',\n    templateUrl: './tile.component.html',\n    styleUrls: ['./tile.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    // tslint:disable-next-line\n    host: {\n        '[style.width]': 'tileSize',\n        '[style.height]': 'tileSize'\n    }\n})\nexport class TileComponent implements OnInit {\n    @Input() data: Tile;\n    public tileSize = null;\n\n    constructor(\n        public el: ElementRef,\n        private _renderer: Renderer2,\n        private _manager: GameManagerService\n    ) {\n        if (this._manager.settings.tileSize) {\n            this.tileSize = this._manager.settings.tileSize\n        }\n\n    }\n\n    ngOnInit() {\n        if (this.data.color) {\n            this._renderer.addClass(this.el.nativeElement, this.data.color);\n        }\n\n    }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport {GameManagerService, Tile} from '../services/game-manager.service';\nimport {TileComponent} from \"../tile/tile.component\";\n\n@Component({\n    selector: 'board',\n    templateUrl: './board.component.html',\n    styleUrls: ['./board.component.css'],\n    host: {\n        '[style.width]': 'boardWidth + \"px\"',\n    }\n})\nexport class BoardComponent {\n    @Input() grid: Array<Tile>;\n    @ViewChild(TileComponent) tile;\n    public boardWidth = null;\n\n    constructor(private _manager: GameManagerService) {\n\n    }\n\n    ngAfterViewInit() {\n        if (this._manager.settings.tileSize) {\n            const bb = this.tile.el.nativeElement.getBoundingClientRect();\n            const TILE_MARGIN = 1; //px\n            const oneTileSpace = bb.width + 2 * TILE_MARGIN;\n            this.boardWidth = oneTileSpace * this._manager.elementsInRow;\n\n        }\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TetrisCoreComponent} from './tetris-core.component';\nimport {BoardComponent} from './board/board.component';\nimport {GameManagerService} from './services/game-manager.service';\nimport {TileComponent} from './tile/tile.component';\n\nexport * from './tetris-core.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        TetrisCoreComponent,\n        BoardComponent,\n        TileComponent\n    ],\n    providers: [\n        GameManagerService\n    ],\n    exports: [TetrisCoreComponent]\n})\nexport class TetrisCoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TetrisCoreModule\n        };\n    }\n}\n"]}