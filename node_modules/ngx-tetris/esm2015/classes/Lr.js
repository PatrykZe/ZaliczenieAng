/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Piece, PieceColors, PieceRotation, PieceTypes } from './Piece';
/** @type {?} */
const MAPS = {};
MAPS[PieceRotation.DEG_0] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],
    [undefined, PieceTypes.Lr, undefined, undefined],
    [undefined, PieceTypes.Lr, undefined, undefined],
];
MAPS[PieceRotation.DEG_90] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, PieceTypes.Lr, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],
];
MAPS[PieceRotation.DEG_180] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],
];
MAPS[PieceRotation.DEG_270] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
];
export class Lr extends Piece {
    /**
     * @param {?} x
     * @param {?} y
     * @param {?} gridSize
     */
    constructor(x, y, gridSize) {
        super(x, y, gridSize, MAPS);
        this.color = PieceColors['Lr'];
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTHIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdGV0cmlzLyIsInNvdXJjZXMiOlsiY2xhc3Nlcy9Mci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLEtBQUssRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFFLFVBQVUsRUFBQyxNQUFNLFNBQVMsQ0FBQzs7QUFHdEUsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDO0FBRWhCLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQUc7SUFDeEIsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLENBQUM7SUFDM0QsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFHLFVBQVUsQ0FBQyxFQUFFLEVBQUcsU0FBUyxFQUFPLFNBQVMsQ0FBQztJQUMzRCxDQUFDLFNBQVMsRUFBTyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTyxTQUFTLENBQUM7SUFDM0QsQ0FBQyxTQUFTLEVBQU8sVUFBVSxDQUFDLEVBQUUsRUFBRyxTQUFTLEVBQU8sU0FBUyxDQUFDO0NBQzlELENBQUM7QUFFRixJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxHQUFHO0lBQ3pCLENBQUMsU0FBUyxFQUFRLFNBQVMsRUFBTyxTQUFTLEVBQVEsU0FBUyxDQUFDO0lBQzdELENBQUMsU0FBUyxFQUFRLFNBQVMsRUFBTyxTQUFTLEVBQVEsU0FBUyxDQUFDO0lBQzdELENBQUMsU0FBUyxFQUFRLFNBQVMsRUFBTyxVQUFVLENBQUMsRUFBRSxFQUFJLFNBQVMsQ0FBQztJQUM3RCxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUksVUFBVSxDQUFDLEVBQUUsRUFBRyxVQUFVLENBQUMsRUFBRSxFQUFJLFNBQVMsQ0FBQztDQUNoRSxDQUFDO0FBRUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRztJQUMxQixDQUFDLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxFQUFNLFNBQVMsQ0FBQztJQUMxRCxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUcsU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTSxTQUFTLENBQUM7Q0FDN0QsQ0FBQztBQUVGLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEdBQUc7SUFDMUIsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFHLFVBQVUsQ0FBQyxFQUFFLEVBQUcsVUFBVSxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0NBQzdELENBQUM7QUFFRixNQUFNLFNBQVUsU0FBUSxLQUFLOzs7Ozs7SUFDekIsWUFBWSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFFBQVE7UUFDdEIsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BpZWNlLCBQaWVjZUNvbG9ycywgUGllY2VSb3RhdGlvbiwgUGllY2VUeXBlc30gZnJvbSAnLi9QaWVjZSc7XG5cblxuY29uc3QgTUFQUyA9IHt9O1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLkxyLCAgUGllY2VUeXBlcy5MciwgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgUGllY2VUeXBlcy5MciwgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgUGllY2VUeXBlcy5MciwgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuXTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR185MF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgIHVuZGVmaW5lZCwgICAgICBQaWVjZVR5cGVzLkxyLCAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuTHIsICAgUGllY2VUeXBlcy5MciwgIFBpZWNlVHlwZXMuTHIsICAgdW5kZWZpbmVkXSxcbl07XG5cbk1BUFNbUGllY2VSb3RhdGlvbi5ERUdfMTgwXSA9IFtcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLkxyLCAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuTHIsICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5MciwgIFBpZWNlVHlwZXMuTHIsICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuXTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR18yNzBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5MciwgIFBpZWNlVHlwZXMuTHIsICBQaWVjZVR5cGVzLkxyLCB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLkxyLCAgdW5kZWZpbmVkICwgICAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG5dO1xuXG5leHBvcnQgY2xhc3MgTHIgZXh0ZW5kcyBQaWVjZSB7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgZ3JpZFNpemUpIHtcbiAgICAgICAgc3VwZXIoeCwgeSwgZ3JpZFNpemUsIE1BUFMpO1xuICAgICAgICB0aGlzLmNvbG9yID0gUGllY2VDb2xvcnNbJ0xyJ107XG4gICAgfVxufVxuIl19