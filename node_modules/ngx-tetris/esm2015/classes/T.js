/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Piece, PieceColors, PieceRotation, PieceTypes } from './Piece';
/** @type {?} */
const MAPS = {};
MAPS[PieceRotation.DEG_0] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],
];
MAPS[PieceRotation.DEG_90] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.T, undefined, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, undefined, undefined, undefined],
];
MAPS[PieceRotation.DEG_180] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
];
MAPS[PieceRotation.DEG_270] = [
    [undefined, undefined, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
];
export class T extends Piece {
    /**
     * @param {?} x
     * @param {?} y
     * @param {?} gridSize
     */
    constructor(x, y, gridSize) {
        super(x, y, gridSize, MAPS);
        this.color = PieceColors['T'];
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10ZXRyaXMvIiwic291cmNlcyI6WyJjbGFzc2VzL1QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUMsTUFBTSxTQUFTLENBQUM7O0FBR3RFLE1BQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUVoQixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxHQUFHO0lBQ3hCLENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxDQUFDO0lBQzNELENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxDQUFDO0lBQzNELENBQUMsU0FBUyxFQUFPLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFPLFNBQVMsQ0FBQztJQUMzRCxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUksVUFBVSxDQUFDLENBQUMsRUFBSSxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsQ0FBQztDQUM5RCxDQUFDO0FBRUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRztJQUN6QixDQUFDLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxFQUFJLFNBQVMsQ0FBQztJQUN4RCxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFPLFNBQVMsRUFBSSxTQUFTLENBQUM7SUFDeEQsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFJLFNBQVMsQ0FBQztJQUN4RCxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFPLFNBQVMsRUFBSSxTQUFTLENBQUM7Q0FDM0QsQ0FBQztBQUVGLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEdBQUc7SUFDMUIsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUksVUFBVSxDQUFDLENBQUMsRUFBRyxTQUFTLENBQUM7SUFDMUQsQ0FBQyxTQUFTLEVBQU8sVUFBVSxDQUFDLENBQUMsRUFBSSxTQUFTLEVBQU0sU0FBUyxDQUFDO0NBQzdELENBQUM7QUFFRixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHO0lBQzFCLENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsU0FBUyxFQUFPLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFNLFNBQVMsQ0FBQztJQUMxRCxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUksVUFBVSxDQUFDLENBQUMsRUFBSSxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsU0FBUyxFQUFPLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFNLFNBQVMsQ0FBQztDQUM3RCxDQUFDO0FBRUYsTUFBTSxRQUFTLFNBQVEsS0FBSzs7Ozs7O0lBQ3hCLFlBQVksQ0FBQyxFQUFFLENBQUMsRUFBRSxRQUFRO1FBQ3RCLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNqQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQaWVjZSwgUGllY2VDb2xvcnMsIFBpZWNlUm90YXRpb24sIFBpZWNlVHlwZXN9IGZyb20gJy4vUGllY2UnO1xuXG5cbmNvbnN0IE1BUFMgPSB7fTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR18wXSA9IFtcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIFBpZWNlVHlwZXMuVCwgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5ULCAgIFBpZWNlVHlwZXMuVCwgICBQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkXSxcbl07XG5cbk1BUFNbUGllY2VSb3RhdGlvbi5ERUdfOTBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgUGllY2VUeXBlcy5ULCAgIHVuZGVmaW5lZCwgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICB1bmRlZmluZWRdLFxuXTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR18xODBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5ULCAgIFBpZWNlVHlwZXMuVCwgICBQaWVjZVR5cGVzLlQsICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgUGllY2VUeXBlcy5ULCAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG5dO1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzI3MF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIFBpZWNlVHlwZXMuVCwgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgUGllY2VUeXBlcy5ULCAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICBQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbl07XG5cbmV4cG9ydCBjbGFzcyBUIGV4dGVuZHMgUGllY2Uge1xuICAgIGNvbnN0cnVjdG9yKHgsIHksIGdyaWRTaXplKSB7XG4gICAgICAgIHN1cGVyKHgsIHksIGdyaWRTaXplLCBNQVBTKTtcbiAgICAgICAgdGhpcy5jb2xvciA9IFBpZWNlQ29sb3JzWydUJ107XG4gICAgfVxufVxuIl19