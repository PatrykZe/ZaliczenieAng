/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild } from '@angular/core';
import { GameManagerService } from '../services/game-manager.service';
import { TileComponent } from "../tile/tile.component";
var BoardComponent = /** @class */ (function () {
    function BoardComponent(_manager) {
        this._manager = _manager;
        this.boardWidth = null;
    }
    /**
     * @return {?}
     */
    BoardComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this._manager.settings.tileSize) {
            /** @type {?} */
            var bb = this.tile.el.nativeElement.getBoundingClientRect();
            /** @type {?} */
            var TILE_MARGIN = 1;
            /** @type {?} */
            var oneTileSpace = bb.width + 2 * TILE_MARGIN;
            this.boardWidth = oneTileSpace * this._manager.elementsInRow;
        }
    };
    BoardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'board',
                    template: "<tile *ngFor=\"let tileData of grid\"\n    [data]=\"tileData\">\n</tile>\n",
                    host: {
                        '[style.width]': 'boardWidth + "px"',
                    },
                    styles: [":host{width:290px;display:block}"]
                }] }
    ];
    /** @nocollapse */
    BoardComponent.ctorParameters = function () { return [
        { type: GameManagerService }
    ]; };
    BoardComponent.propDecorators = {
        grid: [{ type: Input }],
        tile: [{ type: ViewChild, args: [TileComponent,] }]
    };
    return BoardComponent;
}());
export { BoardComponent };
if (false) {
    /** @type {?} */
    BoardComponent.prototype.grid;
    /** @type {?} */
    BoardComponent.prototype.tile;
    /** @type {?} */
    BoardComponent.prototype.boardWidth;
    /** @type {?} */
    BoardComponent.prototype._manager;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXRldHJpcy8iLCJzb3VyY2VzIjpbImJvYXJkL2JvYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBQyxrQkFBa0IsRUFBTyxNQUFNLGtDQUFrQyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7SUFlakQsd0JBQW9CLFFBQTRCO1FBQTVCLGFBQVEsR0FBUixRQUFRLENBQW9COzBCQUY1QixJQUFJO0tBSXZCOzs7O0lBRUQsd0NBQWU7OztJQUFmO1FBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzs7WUFDbEMsSUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O1lBQzlELElBQU0sV0FBVyxHQUFHLENBQUMsQ0FBQzs7WUFDdEIsSUFBTSxZQUFZLEdBQUcsRUFBRSxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsV0FBVyxDQUFDO1lBQ2hELElBQUksQ0FBQyxVQUFVLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDO1NBRWhFO0tBQ0o7O2dCQXpCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLHNGQUFxQztvQkFFckMsSUFBSSxFQUFFO3dCQUNGLGVBQWUsRUFBRSxtQkFBbUI7cUJBQ3ZDOztpQkFDSjs7OztnQkFWTyxrQkFBa0I7Ozt1QkFZckIsS0FBSzt1QkFDTCxTQUFTLFNBQUMsYUFBYTs7eUJBZDVCOztTQVlhLGNBQWMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7R2FtZU1hbmFnZXJTZXJ2aWNlLCBUaWxlfSBmcm9tICcuLi9zZXJ2aWNlcy9nYW1lLW1hbmFnZXIuc2VydmljZSc7XG5pbXBvcnQge1RpbGVDb21wb25lbnR9IGZyb20gXCIuLi90aWxlL3RpbGUuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYm9hcmQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ib2FyZC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYm9hcmQuY29tcG9uZW50LmNzcyddLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tzdHlsZS53aWR0aF0nOiAnYm9hcmRXaWR0aCArIFwicHhcIicsXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBCb2FyZENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgZ3JpZDogQXJyYXk8VGlsZT47XG4gICAgQFZpZXdDaGlsZChUaWxlQ29tcG9uZW50KSB0aWxlO1xuICAgIHB1YmxpYyBib2FyZFdpZHRoID0gbnVsbDtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX21hbmFnZXI6IEdhbWVNYW5hZ2VyU2VydmljZSkge1xuXG4gICAgfVxuXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgICAgICBpZiAodGhpcy5fbWFuYWdlci5zZXR0aW5ncy50aWxlU2l6ZSkge1xuICAgICAgICAgICAgY29uc3QgYmIgPSB0aGlzLnRpbGUuZWwubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIGNvbnN0IFRJTEVfTUFSR0lOID0gMTsgLy9weFxuICAgICAgICAgICAgY29uc3Qgb25lVGlsZVNwYWNlID0gYmIud2lkdGggKyAyICogVElMRV9NQVJHSU47XG4gICAgICAgICAgICB0aGlzLmJvYXJkV2lkdGggPSBvbmVUaWxlU3BhY2UgKiB0aGlzLl9tYW5hZ2VyLmVsZW1lbnRzSW5Sb3c7XG5cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==