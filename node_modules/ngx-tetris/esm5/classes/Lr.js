/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Piece, PieceColors, PieceRotation, PieceTypes } from './Piece';
/** @type {?} */
var MAPS = {};
MAPS[PieceRotation.DEG_0] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],
    [undefined, PieceTypes.Lr, undefined, undefined],
    [undefined, PieceTypes.Lr, undefined, undefined],
];
MAPS[PieceRotation.DEG_90] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, PieceTypes.Lr, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],
];
MAPS[PieceRotation.DEG_180] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, undefined, undefined],
];
MAPS[PieceRotation.DEG_270] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [PieceTypes.Lr, PieceTypes.Lr, PieceTypes.Lr, undefined],
    [PieceTypes.Lr, undefined, undefined, undefined],
];
var Lr = /** @class */ (function (_super) {
    tslib_1.__extends(Lr, _super);
    function Lr(x, y, gridSize) {
        var _this = _super.call(this, x, y, gridSize, MAPS) || this;
        _this.color = PieceColors['Lr'];
        return _this;
    }
    return Lr;
}(Piece));
export { Lr };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTHIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtdGV0cmlzLyIsInNvdXJjZXMiOlsiY2xhc3Nlcy9Mci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLGFBQWEsRUFBRSxVQUFVLEVBQUMsTUFBTSxTQUFTLENBQUM7O0FBR3RFLElBQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUVoQixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxHQUFHO0lBQ3hCLENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxDQUFDO0lBQzNELENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTyxTQUFTLENBQUM7SUFDM0QsQ0FBQyxTQUFTLEVBQU8sVUFBVSxDQUFDLEVBQUUsRUFBRyxTQUFTLEVBQU8sU0FBUyxDQUFDO0lBQzNELENBQUMsU0FBUyxFQUFPLFVBQVUsQ0FBQyxFQUFFLEVBQUcsU0FBUyxFQUFPLFNBQVMsQ0FBQztDQUM5RCxDQUFDO0FBRUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRztJQUN6QixDQUFDLFNBQVMsRUFBUSxTQUFTLEVBQU8sU0FBUyxFQUFRLFNBQVMsQ0FBQztJQUM3RCxDQUFDLFNBQVMsRUFBUSxTQUFTLEVBQU8sU0FBUyxFQUFRLFNBQVMsQ0FBQztJQUM3RCxDQUFDLFNBQVMsRUFBUSxTQUFTLEVBQU8sVUFBVSxDQUFDLEVBQUUsRUFBSSxTQUFTLENBQUM7SUFDN0QsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFJLFVBQVUsQ0FBQyxFQUFFLEVBQUcsVUFBVSxDQUFDLEVBQUUsRUFBSSxTQUFTLENBQUM7Q0FDaEUsQ0FBQztBQUVGLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEdBQUc7SUFDMUIsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFHLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRyxTQUFTLEVBQU8sU0FBUyxFQUFNLFNBQVMsQ0FBQztJQUMxRCxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUcsVUFBVSxDQUFDLEVBQUUsRUFBRyxTQUFTLEVBQU0sU0FBUyxDQUFDO0NBQzdELENBQUM7QUFFRixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHO0lBQzFCLENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRyxVQUFVLENBQUMsRUFBRSxFQUFHLFVBQVUsQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDO0lBQzFELENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRyxTQUFTLEVBQU8sU0FBUyxFQUFNLFNBQVMsQ0FBQztDQUM3RCxDQUFDO0FBRUYsSUFBQTtJQUF3Qiw4QkFBSztJQUN6QixZQUFZLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUTtRQUExQixZQUNJLGtCQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxTQUU5QjtRQURHLEtBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDOztLQUNsQzthQXJDTDtFQWlDd0IsS0FBSyxFQUs1QixDQUFBO0FBTEQsY0FLQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGllY2UsIFBpZWNlQ29sb3JzLCBQaWVjZVJvdGF0aW9uLCBQaWVjZVR5cGVzfSBmcm9tICcuL1BpZWNlJztcblxuXG5jb25zdCBNQVBTID0ge307XG5cbk1BUFNbUGllY2VSb3RhdGlvbi5ERUdfMF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuTHIsICBQaWVjZVR5cGVzLkxyLCAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICBQaWVjZVR5cGVzLkxyLCAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICBQaWVjZVR5cGVzLkxyLCAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZF0sXG5dO1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzkwXSA9IFtcbiAgICBbdW5kZWZpbmVkLCAgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICAgdW5kZWZpbmVkLCAgICAgIFBpZWNlVHlwZXMuTHIsICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5MciwgICBQaWVjZVR5cGVzLkxyLCAgUGllY2VUeXBlcy5MciwgICB1bmRlZmluZWRdLFxuXTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR18xODBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuTHIsICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbUGllY2VUeXBlcy5MciwgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLkxyLCAgUGllY2VUeXBlcy5MciwgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG5dO1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzI3MF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLkxyLCAgUGllY2VUeXBlcy5MciwgIFBpZWNlVHlwZXMuTHIsIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuTHIsICB1bmRlZmluZWQgLCAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbl07XG5cbmV4cG9ydCBjbGFzcyBMciBleHRlbmRzIFBpZWNlIHtcbiAgICBjb25zdHJ1Y3Rvcih4LCB5LCBncmlkU2l6ZSkge1xuICAgICAgICBzdXBlcih4LCB5LCBncmlkU2l6ZSwgTUFQUyk7XG4gICAgICAgIHRoaXMuY29sb3IgPSBQaWVjZUNvbG9yc1snTHInXTtcbiAgICB9XG59XG4iXX0=