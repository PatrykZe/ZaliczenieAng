/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Piece, PieceColors, PieceRotation, PieceTypes } from './Piece';
/** @type {?} */
var MAPS = {};
MAPS[PieceRotation.DEG_0] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],
];
MAPS[PieceRotation.DEG_90] = [
    [undefined, undefined, undefined, undefined],
    [PieceTypes.T, undefined, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, undefined, undefined, undefined],
];
MAPS[PieceRotation.DEG_180] = [
    [undefined, undefined, undefined, undefined],
    [undefined, undefined, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, PieceTypes.T, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
];
MAPS[PieceRotation.DEG_270] = [
    [undefined, undefined, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
    [PieceTypes.T, PieceTypes.T, undefined, undefined],
    [undefined, PieceTypes.T, undefined, undefined],
];
var T = /** @class */ (function (_super) {
    tslib_1.__extends(T, _super);
    function T(x, y, gridSize) {
        var _this = _super.call(this, x, y, gridSize, MAPS) || this;
        _this.color = PieceColors['T'];
        return _this;
    }
    return T;
}(Piece));
export { T };

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10ZXRyaXMvIiwic291cmNlcyI6WyJjbGFzc2VzL1QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsS0FBSyxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQUUsVUFBVSxFQUFDLE1BQU0sU0FBUyxDQUFDOztBQUd0RSxJQUFNLElBQUksR0FBRyxFQUFFLENBQUM7QUFFaEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsR0FBRztJQUN4QixDQUFDLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsQ0FBQztJQUMzRCxDQUFDLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsQ0FBQztJQUMzRCxDQUFDLFNBQVMsRUFBTyxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBTyxTQUFTLENBQUM7SUFDM0QsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUksVUFBVSxDQUFDLENBQUMsRUFBSSxTQUFTLENBQUM7Q0FDOUQsQ0FBQztBQUVGLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEdBQUc7SUFDekIsQ0FBQyxTQUFTLEVBQU8sU0FBUyxFQUFPLFNBQVMsRUFBSSxTQUFTLENBQUM7SUFDeEQsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBTyxTQUFTLEVBQUksU0FBUyxDQUFDO0lBQ3hELENBQUMsVUFBVSxDQUFDLENBQUMsRUFBSSxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBSSxTQUFTLENBQUM7SUFDeEQsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBTyxTQUFTLEVBQUksU0FBUyxDQUFDO0NBQzNELENBQUM7QUFFRixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHO0lBQzFCLENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsU0FBUyxFQUFPLFNBQVMsRUFBTyxTQUFTLEVBQU0sU0FBUyxDQUFDO0lBQzFELENBQUMsVUFBVSxDQUFDLENBQUMsRUFBSSxVQUFVLENBQUMsQ0FBQyxFQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUcsU0FBUyxDQUFDO0lBQzFELENBQUMsU0FBUyxFQUFPLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFNLFNBQVMsQ0FBQztDQUM3RCxDQUFDO0FBRUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRztJQUMxQixDQUFDLFNBQVMsRUFBTyxTQUFTLEVBQU8sU0FBUyxFQUFNLFNBQVMsQ0FBQztJQUMxRCxDQUFDLFNBQVMsRUFBTyxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBTSxTQUFTLENBQUM7SUFDMUQsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFJLFVBQVUsQ0FBQyxDQUFDLEVBQUksU0FBUyxFQUFNLFNBQVMsQ0FBQztJQUMxRCxDQUFDLFNBQVMsRUFBTyxVQUFVLENBQUMsQ0FBQyxFQUFJLFNBQVMsRUFBTSxTQUFTLENBQUM7Q0FDN0QsQ0FBQztBQUVGLElBQUE7SUFBdUIsNkJBQUs7SUFDeEIsV0FBWSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFFBQVE7UUFBMUIsWUFDSSxrQkFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FFOUI7UUFERyxLQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQzs7S0FDakM7WUFyQ0w7RUFpQ3VCLEtBQUssRUFLM0IsQ0FBQTtBQUxELGFBS0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BpZWNlLCBQaWVjZUNvbG9ycywgUGllY2VSb3RhdGlvbiwgUGllY2VUeXBlc30gZnJvbSAnLi9QaWVjZSc7XG5cblxuY29uc3QgTUFQUyA9IHt9O1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzBdID0gW1xuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgUGllY2VUeXBlcy5ULCAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgUGllY2VUeXBlcy5ULCAgIFBpZWNlVHlwZXMuVCwgICB1bmRlZmluZWRdLFxuXTtcblxuTUFQU1tQaWVjZVJvdGF0aW9uLkRFR185MF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuVCwgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuVCwgICBQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuVCwgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgIHVuZGVmaW5lZF0sXG5dO1xuXG5NQVBTW1BpZWNlUm90YXRpb24uREVHXzE4MF0gPSBbXG4gICAgW3VuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFtQaWVjZVR5cGVzLlQsICAgUGllY2VUeXBlcy5ULCAgIFBpZWNlVHlwZXMuVCwgIHVuZGVmaW5lZF0sXG4gICAgW3VuZGVmaW5lZCwgICAgICBQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbl07XG5cbk1BUFNbUGllY2VSb3RhdGlvbi5ERUdfMjcwXSA9IFtcbiAgICBbdW5kZWZpbmVkLCAgICAgIHVuZGVmaW5lZCwgICAgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuICAgIFt1bmRlZmluZWQsICAgICAgUGllY2VUeXBlcy5ULCAgIHVuZGVmaW5lZCwgICAgIHVuZGVmaW5lZF0sXG4gICAgW1BpZWNlVHlwZXMuVCwgICBQaWVjZVR5cGVzLlQsICAgdW5kZWZpbmVkLCAgICAgdW5kZWZpbmVkXSxcbiAgICBbdW5kZWZpbmVkLCAgICAgIFBpZWNlVHlwZXMuVCwgICB1bmRlZmluZWQsICAgICB1bmRlZmluZWRdLFxuXTtcblxuZXhwb3J0IGNsYXNzIFQgZXh0ZW5kcyBQaWVjZSB7XG4gICAgY29uc3RydWN0b3IoeCwgeSwgZ3JpZFNpemUpIHtcbiAgICAgICAgc3VwZXIoeCwgeSwgZ3JpZFNpemUsIE1BUFMpO1xuICAgICAgICB0aGlzLmNvbG9yID0gUGllY2VDb2xvcnNbJ1QnXTtcbiAgICB9XG59XG4iXX0=