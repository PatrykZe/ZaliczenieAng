{"version":3,"file":"ngx-tetris.js.map","sources":["ng://ngx-tetris/classes/Piece.ts","ng://ngx-tetris/classes/Dot.ts","ng://ngx-tetris/classes/Box.ts","ng://ngx-tetris/classes/Line.ts","ng://ngx-tetris/classes/T.ts","ng://ngx-tetris/classes/Z.ts","ng://ngx-tetris/classes/S.ts","ng://ngx-tetris/classes/L.ts","ng://ngx-tetris/classes/Lr.ts","ng://ngx-tetris/classes/PiecesFactory.ts","ng://ngx-tetris/services/game-manager.service.ts","ng://ngx-tetris/tetris-core.component.ts","ng://ngx-tetris/tile/tile.component.ts","ng://ngx-tetris/board/board.component.ts","ng://ngx-tetris/public_api.ts"],"sourcesContent":["export enum PieceRotation {\n    DEG_0 = 0,\n    DEG_90 = 1,\n    DEG_180 = 2,\n    DEG_270 = 3\n}\n\n\nexport enum PieceTypes {\n    Dot = 1,\n    Box = 2,\n    Line = 3,\n    T = 4,\n    L = 5,\n    Lr = 6,\n    Z = 7,\n    S = 8\n}\n\n// picked from https://www.romanzolotarev.com/pico-8-color-palette/\nexport enum PieceColors {\n    Box = 'color-box',\n    Dot = 'color-dot',\n    Line = 'color-line',\n    T = 'color-t',\n    L = 'color-l',\n    Lr = 'color-lr',\n    Z = 'color-z',\n    S = 'color-s'\n}\n\nexport class Piece {\n    color = 'red';\n    x: number;\n    y: number;\n    rotation: PieceRotation = PieceRotation.DEG_0;\n\n    private _maps: {};\n    public map: Array<Array<number>> = [\n        [], []\n    ];\n\n    private _gridSize;\n    private _lastConfig: any = null;\n\n    constructor(x, y, gridSize, maps) {\n        this._gridSize = gridSize;\n        this.x = x;\n        this.y = y;\n        this._maps = maps;\n\n        this.map = this._maps[this.rotation];\n    }\n\n    get positionsOnGrid() {\n        const acc = [];\n        for (let row = 0; row < 4; row++) {\n            for (let col = 0; col < 4; col++) {\n                if (this.map[row][col]) {\n                    const pos = (this.y + row) * this._gridSize.width + this.x + col;\n                    if (pos > 0) {\n                        acc.push(pos);\n                    }\n                }\n            }\n        }\n\n        return acc;\n    }\n\n    public store() {\n        this._lastConfig = {\n            x: this.x,\n            y: this.y,\n            rotation: this.rotation,\n            map: this.map\n        };\n    }\n\n    public clearStore() {\n        this._lastConfig = null;\n    }\n\n    public revert() {\n        if (this._lastConfig) {\n            for (const x in this._lastConfig) {\n                if (this._lastConfig.hasOwnProperty(x)) {\n                    this[x] = this._lastConfig[x];\n                }\n            }\n\n            this._lastConfig = null;\n        }\n    }\n\n    public rotate() {\n        const keys = Object.keys(this._maps);\n        let idx = keys.indexOf(this.rotation.toString());\n        if (idx >= keys.length - 1) {\n            this.rotation = keys[0] as any;\n        } else {\n            this.rotation = keys[++idx] as any;\n        }\n\n        this.map = this._maps[this.rotation];\n    }\n\n    public moveDown() {\n        this.y++;\n    }\n\n    public moveRight() {\n        this.x++;\n    }\n\n    public moveLeft() {\n        this.x--;\n    }\n\n    get bottomRow() {\n        return this.y + 3;\n    }\n\n    get rightCol() {\n        let col = 3;\n        while (col >= 0) {\n            for (let row = 0; row <= 3; row++) {\n                if (this.map[row][col]) {\n                    return this.x + col;\n                }\n            }\n            col--;\n        }\n\n    }\n\n    get leftCol() {\n        return this.x;\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,        undefined,    undefined,    undefined],\n    [undefined,        undefined,    undefined,    undefined],\n    [undefined,        undefined,    undefined,    undefined],\n    [PieceTypes.Box,   undefined,    undefined,    undefined],\n];\n\nexport class Dot extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Dot'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,        undefined,         undefined,    undefined],\n    [undefined,        undefined,         undefined,    undefined],\n    [PieceTypes.Box,   PieceTypes.Box,    undefined,    undefined],\n    [PieceTypes.Box,   PieceTypes.Box,    undefined,    undefined],\n];\n\n\nexport class Box extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Box'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\nconst MAPS = [];\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,         undefined,         undefined,        undefined],\n    [undefined,         undefined,         undefined,        undefined],\n    [undefined,         undefined,         undefined,        undefined],\n    [PieceTypes.Line,   PieceTypes.Line,   PieceTypes.Line,  PieceTypes.Line],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n    [PieceTypes.Line,   undefined,   undefined,  undefined],\n];\n\n\nexport class Line extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Line'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,      undefined],\n    [undefined,      undefined,      undefined,      undefined],\n    [undefined,      PieceTypes.T,   undefined,      undefined],\n    [PieceTypes.T,   PieceTypes.T,   PieceTypes.T,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [PieceTypes.T,   undefined,      undefined,   undefined],\n    [PieceTypes.T,   PieceTypes.T,   undefined,   undefined],\n    [PieceTypes.T,   undefined,      undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.T,   PieceTypes.T,   PieceTypes.T,  undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n    [PieceTypes.T,   PieceTypes.T,   undefined,     undefined],\n    [undefined,      PieceTypes.T,   undefined,     undefined],\n];\n\nexport class T extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['T'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [undefined,      PieceTypes.Z,   undefined,   undefined],\n    [PieceTypes.Z,   PieceTypes.Z,   undefined,   undefined],\n    [PieceTypes.Z,   undefined,      undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Z,   PieceTypes.Z,   undefined,     undefined],\n    [undefined,      PieceTypes.Z,   PieceTypes.Z,  undefined],\n];\n\nexport class Z extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Z'];\n    }\n}\n\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,     undefined,      undefined,      undefined],\n    [PieceTypes.S,  undefined,      undefined,      undefined],\n    [PieceTypes.S,  PieceTypes.S,   undefined,      undefined],\n    [undefined,     PieceTypes.S,   undefined,      undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,     undefined,      undefined,      undefined],\n    [undefined,     undefined,      undefined,      undefined],\n    [undefined,     PieceTypes.S,   PieceTypes.S,   undefined],\n    [PieceTypes.S,  PieceTypes.S,   undefined,      undefined],\n];\n\nexport class S extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['S'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,   undefined],\n    [PieceTypes.L,   undefined,      undefined,   undefined],\n    [PieceTypes.L,   undefined,      undefined,   undefined],\n    [PieceTypes.L,   PieceTypes.L,   undefined,   undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.L,   PieceTypes.L,   PieceTypes.L,  undefined],\n    [PieceTypes.L,   undefined,      undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.L,   PieceTypes.L,   undefined,     undefined],\n    [undefined,      PieceTypes.L,   undefined,     undefined],\n    [undefined,      PieceTypes.L,   undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      PieceTypes.L,  undefined],\n    [PieceTypes.L,   PieceTypes.L,   PieceTypes.L,  undefined],\n];\n\nexport class L extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['L'];\n    }\n}\n","import {Piece, PieceColors, PieceRotation, PieceTypes} from './Piece';\n\n\nconst MAPS = {};\n\nMAPS[PieceRotation.DEG_0] = [\n    [undefined,      undefined,      undefined,      undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  undefined,      undefined],\n    [undefined,      PieceTypes.Lr,  undefined,      undefined],\n    [undefined,      PieceTypes.Lr,  undefined,      undefined],\n];\n\nMAPS[PieceRotation.DEG_90] = [\n    [undefined,       undefined,      undefined,       undefined],\n    [undefined,       undefined,      undefined,       undefined],\n    [undefined,       undefined,      PieceTypes.Lr,   undefined],\n    [PieceTypes.Lr,   PieceTypes.Lr,  PieceTypes.Lr,   undefined],\n];\n\nMAPS[PieceRotation.DEG_180] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  undefined,     undefined],\n];\n\nMAPS[PieceRotation.DEG_270] = [\n    [undefined,      undefined,      undefined,     undefined],\n    [undefined,      undefined,      undefined,     undefined],\n    [PieceTypes.Lr,  PieceTypes.Lr,  PieceTypes.Lr, undefined],\n    [PieceTypes.Lr,  undefined ,     undefined,     undefined],\n];\n\nexport class Lr extends Piece {\n    constructor(x, y, gridSize) {\n        super(x, y, gridSize, MAPS);\n        this.color = PieceColors['Lr'];\n    }\n}\n","import {Dot} from './Dot';\nimport {Box} from './Box';\nimport {Line} from './Line';\nimport {T} from './T';\nimport {Z} from './Z';\nimport {S} from './S';\nimport {L} from './L';\nimport {Lr} from './Lr';\n\nexport class PiecesFactory {\n    private _available = [];\n    private _gridSize;\n\n    constructor(gridSize) {\n        this._gridSize = gridSize;\n\n        this._available.push(Dot);\n        this._available.push(Box);\n        this._available.push(Line);\n        this._available.push(T);\n        this._available.push(Z);\n        this._available.push(S);\n        this._available.push(L);\n        this._available.push(Lr);\n    }\n\n    public getRandomPiecePiece(x, y) {\n        const idx = Math.floor(Math.random() * (this._available.length));\n\n        return new this._available[idx](x, y, this._gridSize);\n        // return new this._available[2](x, y, this._gridSize);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Piece} from '../classes/Piece';\nimport {PiecesFactory} from '../classes/PiecesFactory';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {Subject} from 'rxjs/internal/Subject';\n\nconst SPAWN_POSITION_X = 4;\nconst SPAWN_POSITION_Y = -4;\n\nexport class Tile {\n    solid = false;\n    color = null;\n}\n\n@Injectable()\nexport class GameManagerService {\n    public settings = {\n        tileSize: null\n    };\n\n    public get elementsInRow() {\n        return this._gridSize.width;\n    }\n\n    // serialized grid :)\n    public grid: Array<Tile>;\n\n    public lineCleared$: Observable<any>;\n    public gameOver$: Observable<any>;\n\n    private _gridSize: {\n        width: number,\n        height: number\n    } = { width: 0, height: 0 };\n\n    private _piece: Piece;\n    private _piecesFactory: PiecesFactory;\n\n    private _locked = true;\n    private _gameSpeed: number;\n    private _gameInterval;\n\n    private _lineCleared = new Subject<any>();\n    private _gameOver = new Subject<any>();\n\n    constructor() {\n        this.lineCleared$ = this._lineCleared.asObservable();\n        this.gameOver$ = this._gameOver.asObservable();\n    }\n\n    public initialize(width: number, height: number, gameSpeed, tileSize?: any) {\n        this._gridSize.width = width;\n        this._gridSize.height = height;\n        this._gameSpeed = gameSpeed;\n        this._piecesFactory = new PiecesFactory(this._gridSize);\n\n        if (tileSize) {\n            this.settings.tileSize = tileSize;\n        }\n\n        this._initializeEmptyBoard();\n\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n\n    public start() {\n        clearInterval(this._gameInterval);\n        this._gameInterval = setInterval(() => {\n            this._update();\n        }, this._gameSpeed);\n        this._locked = false;\n    }\n\n    public stop() {\n        this._locked = true;\n        clearInterval(this._gameInterval);\n    }\n\n    public reset() {\n        const emptyTile = new Tile();\n        for (let pos = 0; pos < this.grid.length; pos++) {\n            if (this.grid[pos].color || this.grid[pos].solid) {\n                this.__changeCell(pos, emptyTile);\n            }\n        }\n\n        this._spawnNewPiece();\n        this._drawPiece();\n    }\n\n    public moveLeft() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveLeft();\n        if (this._collidesLeft()) {\n            this._piece.revert();\n        }\n\n        this._drawPiece();\n    }\n\n    public moveRight() {\n        if (this._locked) {\n            return;\n        }\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveRight();\n        if (this._collidesRight()) {\n            this._piece.revert();\n        }\n\n        this._drawPiece();\n    }\n\n    public rotate() {\n        if (this._locked) {\n            return;\n        }\n\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.rotate();\n        while (this._collidesRight()) {\n            this._piece.moveLeft();\n\n            if (this._collidesLeft()) {\n                this._piece.revert();\n                break;\n            }\n        }\n\n        this._drawPiece();\n    }\n\n    public moveDown() {\n        this._update();\n    }\n\n    private _clearFullLines() {\n        for (let row = this._gridSize.height - 1; row >= 0; row--) {\n            let isFull = true;\n            for (let col = 0; col < this._gridSize.width; col++) {\n                const pos = row * this._gridSize.width + col;\n                if (this.grid[pos].solid === false) {\n                    isFull = false;\n                    break;\n                }\n            }\n\n            if (isFull) {\n                const emptyRow = Array.apply(null, Array(this._gridSize.width))\n                    .map((idx) => new Tile());\n\n                const topPortion = this.grid.slice(0, row * this._gridSize.width);\n\n                this.grid.splice(0, ++row * this._gridSize.width, ...emptyRow.concat(topPortion));\n                this._lineCleared.next();\n            }\n        }\n    }\n\n    private _update() {\n        if (this._locked) {\n            return;\n        }\n        this._locked = true;\n        this._piece.revert();\n\n        this._clearPiece();\n        this._piece.store();\n\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            this._piece.revert();\n            this._markSolid();\n            this._drawPiece();\n\n            this._clearFullLines();\n\n            this._spawnNewPiece();\n            if (this._isGameOver()) {\n                this._onGameOver();\n                return;\n            }\n        }\n\n        this._drawPiece();\n        this._locked = false;\n    }\n\n    private _isGameOver() {\n        this._piece.store();\n        this._piece.moveDown();\n        if (this._collidesBottom()) {\n            return true;\n        }\n\n        this._piece.revert();\n        return false;\n    }\n\n    private _onGameOver() {\n        this.stop();\n        this._gameOver.next();\n    }\n\n    private _spawnNewPiece() {\n        this._piece = this._piecesFactory.getRandomPiecePiece(SPAWN_POSITION_X, SPAWN_POSITION_Y);\n    }\n\n    private _initializeEmptyBoard() {\n        const cellsCount = this._gridSize.width * this._gridSize.height;\n        this.grid = Array.apply(null, Array(cellsCount))\n            .map((idx) => new Tile());\n    }\n\n    private _clearPiece() {\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n                this.__changeCell(pos, {color: undefined});\n            });\n    }\n\n    private _drawPiece() {\n        this._piece.clearStore();\n        this._piece.positionsOnGrid\n            .forEach((pos) => {\n                this.__changeCell(pos, {color: this._piece.color});\n            });\n    }\n\n    private _markSolid() {\n        this._piece.positionsOnGrid.forEach((pos) => {\n            this.__changeCell(pos, {solid: true});\n        });\n    }\n\n    private __changeCell(pos, data = {}) {\n        this.grid[pos] = Object.assign({}, this.grid[pos], data);\n    }\n\n    private _collidesBottom() {\n        if (this._piece.bottomRow >= this._gridSize.height) {\n            return true;\n        }\n        return this.__collides();\n    }\n\n    private _collidesLeft() {\n        if (this._piece.leftCol < 0) {\n            return true;\n        }\n\n        return this.__collides();\n    }\n\n    private _collidesRight() {\n        if (this._piece.rightCol >= this._gridSize.width) {\n            return true;\n        }\n\n        return this.__collides();\n    }\n\n    private __collides() {\n        return this._piece.positionsOnGrid\n            .some((pos) => {\n                if (pos > 0 && this.grid[pos] && this.grid[pos].solid) {\n                    return true;\n                }\n\n                return false;\n            });\n    }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {GameManagerService, Tile} from './services/game-manager.service';\n\nconst GAME_SPEED = 500;\nconst MOVE_DOWN_SPEED = 0.2; // fraction of initial game speed\n\nexport enum GameState {\n    Paused = 0,\n    Started = 1,\n    Over = 2\n}\n\n@Component({\n    selector: 'tetris-core',\n    templateUrl: './tetris-core.component.html',\n    // styleUrls: ['./tetris-core.component.css']\n})\nexport class TetrisCoreComponent implements OnInit, OnChanges {\n    @Input() tileSize: any;\n\n    @Input() initialSpeed: number;\n    @Input() rotate = false;\n    @Input() moveLeft = false;\n    @Input() moveRight = false;\n    @Input() moveDown = false;\n    @Input() start = false;\n    @Input() stop = false;\n    @Input() reset = false;\n\n    @Output() lineCleared: EventEmitter<any> = new EventEmitter();\n    @Output() gameOver: EventEmitter<any> = new EventEmitter();\n\n    public grid: Array<Tile>;\n    public state: GameState = GameState.Paused;\n\n    gridWidth = 10;\n    gridHeight = 20;\n\n    private _moveDownSpeed;\n\n    constructor(private _manager: GameManagerService) {\n        this._manager.lineCleared$.subscribe((data) => this._onLineCleared(data));\n        this._manager.gameOver$.subscribe((data) => this._onGameOver(data));\n    }\n\n    ngOnInit() {\n      this.initialSpeed = this.initialSpeed || GAME_SPEED;\n      this._moveDownSpeed = this.initialSpeed * MOVE_DOWN_SPEED;\n\n      this._manager.initialize(this.gridWidth, this.gridHeight, this.initialSpeed, this.tileSize);\n      this.grid = this._manager.grid;\n\n      setInterval(() => {\n        if (this.moveDown) {\n          this._manager.moveDown();\n        }\n\n      }, this._moveDownSpeed);\n    }\n\n    ngOnChanges(changes) {\n        if (this._keyPressed(changes.moveLeft)) {\n            this._manager.moveLeft();\n\n        } else if (this._keyPressed(changes.moveRight)) {\n            this._manager.moveRight();\n        }\n\n        if (this._keyPressed(changes.rotate)) { this._manager.rotate(); }\n        if (this._keyPressed(changes.start))  { this._manager.start(); }\n        if (this._keyPressed(changes.stop))  { this._manager.stop(); }\n        if (this._keyPressed(changes.reset))  { this._manager.reset(); }\n    }\n\n    public actionLeft() { this._manager.moveLeft(); }\n    public actionRight() { this._manager.moveRight(); }\n    public actionRotate() { this._manager.rotate(); }\n    public actionDown() { this._manager.moveDown(); }\n    public actionReset() { this._manager.reset(); }\n\n    public actionStart() {\n        this._manager.start();\n        this.state = GameState.Started;\n    }\n    public actionStop() {\n        this._manager.stop();\n        this.state = GameState.Paused;\n    }\n\n    private _keyPressed(key) {\n        return key && key.currentValue && !key.previousValue;\n    }\n\n    private _onLineCleared(data) {\n        this.lineCleared.emit(data);\n    }\n\n    private _onGameOver(data) {\n        this.state = GameState.Over;\n        this.gameOver.emit();\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport {GameManagerService, Tile} from '../services/game-manager.service';\n\n@Component({\n    selector: 'tile',\n    templateUrl: './tile.component.html',\n    styleUrls: ['./tile.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    // tslint:disable-next-line\n    host: {\n        '[style.width]': 'tileSize',\n        '[style.height]': 'tileSize'\n    }\n})\nexport class TileComponent implements OnInit {\n    @Input() data: Tile;\n    public tileSize = null;\n\n    constructor(\n        public el: ElementRef,\n        private _renderer: Renderer2,\n        private _manager: GameManagerService\n    ) {\n        if (this._manager.settings.tileSize) {\n            this.tileSize = this._manager.settings.tileSize\n        }\n\n    }\n\n    ngOnInit() {\n        if (this.data.color) {\n            this._renderer.addClass(this.el.nativeElement, this.data.color);\n        }\n\n    }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport {GameManagerService, Tile} from '../services/game-manager.service';\nimport {TileComponent} from \"../tile/tile.component\";\n\n@Component({\n    selector: 'board',\n    templateUrl: './board.component.html',\n    styleUrls: ['./board.component.css'],\n    host: {\n        '[style.width]': 'boardWidth + \"px\"',\n    }\n})\nexport class BoardComponent {\n    @Input() grid: Array<Tile>;\n    @ViewChild(TileComponent) tile;\n    public boardWidth = null;\n\n    constructor(private _manager: GameManagerService) {\n\n    }\n\n    ngAfterViewInit() {\n        if (this._manager.settings.tileSize) {\n            const bb = this.tile.el.nativeElement.getBoundingClientRect();\n            const TILE_MARGIN = 1; //px\n            const oneTileSpace = bb.width + 2 * TILE_MARGIN;\n            this.boardWidth = oneTileSpace * this._manager.elementsInRow;\n\n        }\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TetrisCoreComponent} from './tetris-core.component';\nimport {BoardComponent} from './board/board.component';\nimport {GameManagerService} from './services/game-manager.service';\nimport {TileComponent} from './tile/tile.component';\n\nexport * from './tetris-core.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        TetrisCoreComponent,\n        BoardComponent,\n        TileComponent\n    ],\n    providers: [\n        GameManagerService\n    ],\n    exports: [TetrisCoreComponent]\n})\nexport class TetrisCoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TetrisCoreModule\n        };\n    }\n}\n"],"names":["MAPS"],"mappings":"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"}
