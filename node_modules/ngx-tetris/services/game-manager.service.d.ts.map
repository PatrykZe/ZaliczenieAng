{"version":3,"file":"game-manager.service.d.ts","sources":["game-manager.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs/internal/Observable';\nexport declare class Tile {\n    solid: boolean;\n    color: any;\n}\nexport declare class GameManagerService {\n    settings: {\n        tileSize: any;\n    };\n    readonly elementsInRow: number;\n    grid: Array<Tile>;\n    lineCleared$: Observable<any>;\n    gameOver$: Observable<any>;\n    private _gridSize;\n    private _piece;\n    private _piecesFactory;\n    private _locked;\n    private _gameSpeed;\n    private _gameInterval;\n    private _lineCleared;\n    private _gameOver;\n    constructor();\n    initialize(width: number, height: number, gameSpeed: any, tileSize?: any): void;\n    start(): void;\n    stop(): void;\n    reset(): void;\n    moveLeft(): void;\n    moveRight(): void;\n    rotate(): void;\n    moveDown(): void;\n    private _clearFullLines();\n    private _update();\n    private _isGameOver();\n    private _onGameOver();\n    private _spawnNewPiece();\n    private _initializeEmptyBoard();\n    private _clearPiece();\n    private _drawPiece();\n    private _markSolid();\n    private __changeCell(pos, data?);\n    private _collidesBottom();\n    private _collidesLeft();\n    private _collidesRight();\n    private __collides();\n}\n"]}